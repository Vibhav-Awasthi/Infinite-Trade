{"version":3,"file":"static/js/335.0d685d0c.chunk.js","mappings":"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","sources":["screen/login/action.ts","screen/login/linkSent.tsx","screen/login/style.tsx"],"sourcesContent":["import Utils from \"../../Utils\";\n\nexport const login = (values: { [key: string]: any }, history: any) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      ...values,\n      deviceId: \"3\",\n      deviceToken: \"deviceToken\"\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.login,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n        console.log(data);\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          \n          Utils.showAlert(1,data.message)\n          history.push(Utils.Pathname.Dashboard);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n        \n        } else {\n          Utils.showAlert(2,data.message)\n          dispatch({ \n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        console.log(data,error);\n        Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const forgotPassword = (\n  values: { [key: string]: any },\n  history: any\n) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      ...values,\n      deviceId: \"3\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.forgotPassword,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          console.log(data);\n\n          history.push(Utils.Pathname.Link_SENT);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          Utils.showAlert(1, data.message);\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const resetPassword = (\n  values: { [key: string]: any },\n  token: string,\n  history: any\n) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      // check if user is online or not\n      Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      token: token.split(\"=\")[1],\n      newPassword: values.newPassword,\n      deviceId: localStorage.getItem(\"user_id\")? localStorage.getItem(\"user_id\") : \"3\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.resetPassword,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n\n          history.push(Utils.Pathname.LOGIN);\n          Utils.showAlert(1,data.message);\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        console.log(data);\n        Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const verifyAccount = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      token: localStorage.getItem(\"verify_account_token\") || \"\",\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.verify,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n        console.log(data);\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          localStorage.setItem(\"accessToken\", data.data.accessToken);\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const resendMail = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      email: localStorage.getItem(\"user_email\") || \"\",\n      type: 1,\n      deviceId: \"string\",\n      deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n    };\n\n    Utils.API.postApiCall(\n      Utils.endpoint.resendLink,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, data.message);\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n","import React from \"react\";\nimport ImageContainer from \"../../components/ImageContainer\";\nimport Schema from \"../../schema\";\nimport InputField from \"../../components/inputfield\";\nimport Utils from \"../../Utils\";\n\nimport {\n  HeadingText,\n  CommonButton,\n  InnerMainDiv,\n  SmallText,\n} from \"../../components/styledComponents/auth/signIn\";\n\nimport { useHistory} from \"react-router-dom\";\nimport { useStyles } from \"./style\";\nimport { useTheme } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik, Form } from \"formik\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useDispatch } from \"react-redux\";\nimport LocalImages from \"../../Utils/images\";\nimport NormalButton from \"../../components/button/NormalButton\";\nimport { resendMail, verifyAccount } from \"./action\";\n\nconst LinkSent = () => {\n  const theme = useTheme();\n  const classes = useStyles({ theme });\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleResendEmail = () => {\n    dispatch(resendMail());\n  };\n\n  return (\n    <>\n      <HelmetProvider>\n        <div className={classes.loginContainer}>\n          <Box>\n            <div className={classes.titleContainer}>\n              <ImageContainer\n                style={classes.brandLogo}\n                imgUrl={LocalImages.Logo}\n              />\n              <div className={classes.title}>\n                <Typography\n                  sx={{\n                    fontSize: \"24px\",\n                    fontWeight: \"bold\",\n                    fontStretch: \"normal\",\n                    lineHeight: \"normal\",\n                    letterSpacing: \"normal\",\n                    color: \"#4f4f4f\",\n                    float: \"left\",\n                    marginTop: \"4%\",\n                    [theme.breakpoints.down(1025)]: {\n                      fontSize: \"20px\",\n                      marginLeft: \"2%\",\n                      marginTop: \"4%\",\n                    },\n                  }}\n                >\n                  Reset password link sent\n                </Typography>\n              </div>\n              <div className={classes.verifyTitle}>\n                <Typography\n                  sx={{\n                    fontSize: \"15px\",\n                    textAlign: \"left\",\n                    width: \"100%\",\n                    fontStretch: \"normal\",\n                    lineHeight: \"normal\",\n                    letterSpacing: \"normal\",\n                    color: \"#687173\",\n                    float: \"left\",\n                    marginTop: \"2%\",\n                    marginRight: \"10% !important\",\n                    [theme.breakpoints.down(1025)]: {\n                      fontSize: \"12px\",\n                      marginLeft: \"2%\",\n                      marginTop: \"4%\",\n                    },\n                  }}\n                >\n                  To create your new password. Click the ink in the email and enter a new one\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.buttonContainer}>\n              <CommonButton\n                // className={classes.resendMail}\n                sx={{\n                  color: \"black\",\n                  textDecoration: \"none\",\n                  textTransform:\"capitalize\",\n                  width: \"40%\",\n                  border: \"1px solid black\",\n                  backgroundColor: \"#fff\",\n                  \"&:hover\": {\n                    background: \"none\",\n                  },\n                }}\n                type=\"submit\"\n                variant=\"contained\"\n                onClick={handleResendEmail}\n              >\n                <Typography className={classes.lables}>Resend Email</Typography>\n              </CommonButton>\n              <CommonButton\n                // className={classes.activeButton}\n                sx={{ color: \"#fff\", textDecoration: \"none\", textTransform:\"capitalize\", width: \"40%\", }}\n                type=\"submit\"\n                variant=\"contained\"\n                onClick={() => history.push(Utils.Pathname.LOGIN)}\n              >\n                <Typography className={classes.lables}>Login</Typography>\n              </CommonButton>\n            </div>\n          </Box>\n        </div>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default LinkSent;\n","import { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  loginContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    width: \"88% !important\",\n    height: \"88% !important\",\n    marginLeft: \"8%\",\n    [theme.breakpoints.down(1024)]: {\n      padding: \"50px\",\n      justifyContent: \"center\",\n    },\n    // \"& > div\": {\n    //   [theme.breakpoints.down(1025)]: {\n    //     width: \"90% !important\",\n    //   },\n    // },\n  }),\n\n  titleContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  }),\n\n  brandLogo: ({ theme }: any) => ({\n    width: \"100%\",\n    // position: \"relative\",\n    // right: \"12%\",\n    \"& figure\": {\n      margin: 0,\n      width: \"153px\",\n      height: \"46px\",\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  title: ({ theme }: any) => ({\n    width: \"100%\",\n\n    // margin: \"30px 160px 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n  lables: ({ theme }: any) => ({\n    float: \"left\",\n    marginTop:\"8%\",\n    marginBottom: \"1.5%\",\n  }),\n\n  verifyTitle: ({ theme }: any) => ({\n    border: \"1 px solid black\",\n  }),\n  \n  buttonContainer: () => ({\n    marginTop: \"5%\",\n    // marginRight: \"22%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  }),\n\n  forgotPassword: () => ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"3%\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n\n  inputField: () => ({\n    marginBottom: \"5%\",\n  }),\n\n  activeButton: () => ({\n    color: \"#ffffff\",\n    backgroundColor: \"#0da4ce\",\n    maxHeight:\"40px\",\n  }),\n\n  formCommon: () => ({\n    alignItems: \"flex-start\",\n  }),\n\n  dontHaveAccount: () => ({\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n  endIconContainer: () => ({\n    backgroundColor: \"#0da4ce\",\n  }),\n});\n\nexport { useStyles };\n"],"names":["login","values","history","dispatch","navigator","onLine","dataToSend","deviceId","deviceToken","console","log","Utils","respData","data","statusCode","message","push","type","payload","error","forgotPassword","resetPassword","token","split","newPassword","localStorage","getItem","resendMail","email","theme","useTheme","classes","useStyles","useHistory","useDispatch","className","loginContainer","titleContainer","style","brandLogo","imgUrl","LocalImages","title","sx","fontSize","fontWeight","fontStretch","lineHeight","letterSpacing","color","float","marginTop","breakpoints","down","marginLeft","verifyTitle","textAlign","width","marginRight","buttonContainer","textDecoration","textTransform","border","backgroundColor","background","variant","onClick","lables","makeStyles","display","flexDirection","justifyContent","height","padding","margin","up","marginBottom","inputField","activeButton","maxHeight","formCommon","alignItems","dontHaveAccount","endIconContainer"],"sourceRoot":""}