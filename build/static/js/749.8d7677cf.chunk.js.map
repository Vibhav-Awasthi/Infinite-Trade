{"version":3,"file":"static/js/749.8d7677cf.chunk.js","mappings":"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","sources":["components/button/NormalButton.tsx","screen/signup/actions.ts","screen/signup/selectProfile.tsx","screen/signup/style.tsx"],"sourcesContent":["import React from \"react\";\nimport { Button, ButtonProps } from \"@mui/material\";\n\nexport default function NormalButton({ children, ...rest }: ButtonProps) {\n  const attributes: ButtonProps = {\n      ...rest,\n      fullWidth:true,\n  };\n  return <Button sx={{padding:\"20px 0px\"}} {...attributes}>{children}</Button>;\n}\n","import { ResetPasswordModel } from \"../../model\";\nimport Utils from \"../../Utils\";\n\nexport const signUp = (values: any, setSubmitting: any, history: any) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n    let dataToSend = {\n      ...values,\n      deviceId: \"string\",\n    };\n\n    delete dataToSend.checked;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.signUp,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          const { accessToken, email, name, userId } = data.data;\n\n          localStorage.setItem(\"verify_account_token\", accessToken);\n          localStorage.setItem(\"user_email\", email);\n          localStorage.setItem(\"user_name\", name);\n          localStorage.setItem(\"user_id\", userId);\n\n          history.push(Utils.Pathname.VERIFY);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          setSubmitting(false);\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          setSubmitting(false);\n          // Utils.showAlert(2, data.message);\n          // dispatch({\n          //   type: Utils.ActionName.SIGNUP,\n          //   payload: {\n          //     username: \"\",\n          //     password: \"\",\n          //     accountError: data.message,\n          //   },\n          // });\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        setSubmitting(false);\n        let { data } = error;\n        console.log(data);\n        // Utils.showAlert(2, data.message);\n        // dispatch({\n        //   type: Utils.ActionName.SIGNUP,\n        //   payload: {\n        //     username: \"\",\n        //     password: \"\",\n        //     accountError: data.messa ge,\n        //   },\n        // });\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const resendMail = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      email: localStorage.getItem(\"user_email\") || \"\",\n      type: 1,\n      deviceId: \"string\",\n      deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n    };\n\n    Utils.API.postApiCall(\n      Utils.endpoint.resendLink,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const getSkills = () => {\n  return (dispatch: any) => {\n    Utils.API.getApiCall(\n      Utils.endpoint.skills,\n      ``,\n      (respData: any) => {\n        let { data } = respData;\n        if (data.statusCode === 200) {\n          console.log(data);\n          dispatch({\n            type: Utils.ActionName.SKILLS,\n            payload: {\n              skills: [...data.data.skills],\n            },\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n      }\n    );\n  };\n};\n\nexport const verifyAccount = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      token: localStorage.getItem(\"verify_account_token\") || \"\",\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.verify,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          console.log(data);\n          localStorage.setItem(\"accessToken\", data.data.accessToken);\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const soleTraderProfileComplete = (\n  values: { [key: string]: any },\n  history: any\n) => {\n  return (dispatch: Function, getState: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    const { userType, mobileNo } = getState().profileSelectorReducer;\n\n    let location = values.location;\n    let valToSend = { ...values };\n    delete valToSend.location;\n    valToSend.skills = valToSend.skills.map((val: any) => val.TYPE);\n\n    let dataToSend = {\n      userType,\n      mobileNo: `${mobileNo}`,\n      location,\n      companySoleTraderDetail: { ...valToSend },\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    // console.log(dataToSend);\n\n    // return;\n\n    Utils.API.putApiCall(\n      Utils.endpoint.profileComplete,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n          history.push(Utils.Pathname.Dashboard) \n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\n// export const addSoleTrader = () => {\n//   return (dispatch: Function) => {\n//     if (!navigator.onLine) {\n//       //check if user is online or not\n//       // Utils.showAlert(2, 'Please check your internet connection!');\n//       dispatch({\n//         type: Utils.ActionName.LOADING,\n//         payload: false,\n//       });\n//       return;\n//     }\n\n//     let dataToSend = {\n//       email: localStorage.getItem(\"user_email\") || \"\",\n//       type: 1,\n//       deviceId: \"string\",\n//       deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n//     };\n\n//     Utils.API.postApiCall(\n//       Utils.endpoint.resendLink,\n//       dataToSend,\n//       (respData: any) => {\n//         let { data } = respData;\n\n//         if (data.statusCode === Utils.Constants.api_success_code.success) {\n//           dispatch({\n//             type: Utils.ActionName.LOADING,\n//             payload: false,\n//           });\n\n//           // Utils.showAlert(1, \"Successfully logged in!\");\n//         } else {\n//           dispatch({\n//             type: Utils.ActionName.LOADING,\n//             payload: false,\n//           });\n//         }\n//       },\n//       (error: any) => {\n//         let { data } = error;\n//         // console.log(data);\n//         // Utils.showAlert(2, data.message);\n//         dispatch({\n//           type: Utils.ActionName.LOADING,\n//           payload: false,\n//         });\n//       }\n//     );\n//   };\n// };\n","// import React from \"react\";\nimport ImageContainer from \"../../components/ImageContainer\";\nimport Schema from \"../../schema\";\nimport InputField from \"../../components/inputfield\";\nimport Utils from \"../../Utils\";\n\nimport {\n  HeadingText,\n  ActiveButton,\n  InnerMainDiv,\n  SmallText,\n} from \"../../components/styledComponents/auth/signIn\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useStyles } from \"./style\";\nimport { useTheme } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik, Form } from \"formik\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport LocalImages from \"../../Utils/images\";\nimport NormalButton from \"../../components/button/NormalButton\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { ReducersModel } from \"../../model\";\nimport React from \"react\";\nimport { verifyAccount } from \"./actions\";\n\nconst SelectProfile = () => {\n  const theme = useTheme();\n  const classes = useStyles({ theme });\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(verifyAccount());\n  }, [dispatch]);\n\n  const state = useSelector((state: ReducersModel) => state);\n  const { userType } = state.profileSelectorReducer;\n\n  const handleProfileSelector = (type: string) => {\n    dispatch({\n      type: Utils.ActionName.PROFILESELECTOR,\n      payload: {\n        userType: type,\n      },\n    });\n    console.log(state);\n  };\n\n  const handleClick = () => {\n    if (userType === \"COMPANYSOLETRADER\") {\n      history.push(Utils.Pathname.SOLE_TRADER_CONTACT);\n    } else {\n      history.push(Utils.Pathname.COMPANY_CONTACTS);\n    }\n  };\n\n  return (\n    <>\n      <HelmetProvider>\n        <div className={classes.loginContainer}>\n          <div>\n            <Typography sx={{ ml: \"90%\", fontWeight: \"500\", color: \"#BDBDBD\" }}>\n              01/03\n            </Typography>\n            <Typography sx={{ ml: \"80%\", fontWeight: \"600\", color: \"#828282\" }}>\n              Account Type\n            </Typography>\n          </div>\n          <Box className={classes.titleContainer}>\n            <ImageContainer\n              style={classes.brandLogo}\n              imgUrl={LocalImages.Logo}\n            />\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"30px\",\n                  fontWeight: \"bold\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#4f4f4f\",\n                  float: \"left\",\n                  marginTop: \"4%\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"20px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Are you...\n              </Typography>\n              <Typography\n                sx={{\n                  fontSize: \"15px\",\n                  textAlign: \"left\",\n                  width: \"100%\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#687173\",\n                  float: \"left\",\n                  marginTop: \"2%\",\n                  marginRight: \"10% !important\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"12px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Please select one of the options\n              </Typography>\n            </div>\n            <div className={classes.buttonContainer}>\n              <div\n                className={classes.profileSelector}\n                onClick={() => handleProfileSelector(\"COMPANYSOLETRADER\")}\n                style={\n                  userType === \"COMPANYSOLETRADER\"\n                    ? { border: \"2px solid #0da4ce\", color: \"#0da4ce\" }\n                    : {}\n                }\n              >\n                <ImageContainer\n                  imgUrl={LocalImages.Work}\n                  style={classes.selectProfile}\n                />\n                <Typography\n                  sx={{\n                    fontSize: \"26px\",\n                    textAlign: \"center\",\n                    width: \"100%\",\n                    color: \"#687173\",\n                    float: \"left\",\n                    marginTop: \"2%\",\n                    marginRight: \"10% !important\",\n                    [theme.breakpoints.down(1025)]: {\n                      fontSize: \"12px\",\n                      marginLeft: \"2%\",\n                      marginTop: \"4%\",\n                    },\n                  }}\n                >\n                  Sole Trader\n                </Typography>\n                <Typography\n                  sx={{\n                    fontSize: \"16px\",\n                    textAlign: \"center\",\n                    width: \"100%\",\n                    color: \"#687173\",\n                    float: \"left\",\n                    marginTop: \"2%\",\n                    [theme.breakpoints.down(1025)]: {\n                      fontSize: \"12px\",\n                      marginLeft: \"2%\",\n                      marginTop: \"4%\",\n                    },\n                  }}\n                >\n                  I am looking for work.\n                </Typography>\n              </div>\n              <div\n                className={classes.profileSelector}\n                onClick={() => handleProfileSelector(\"COMPANY\")}\n                style={\n                  userType === \"COMPANY\" ? { border: \"2px solid #0da4ce\" } : {}\n                }\n              >\n                <ImageContainer\n                  imgUrl={LocalImages.Client}\n                  style={classes.selectProfile}\n                />\n                <Typography\n                  sx={{\n                    fontSize: \"26px\",\n                    textAlign: \"center\",\n                    width: \"100%\",\n                    color: \"#687173\",\n                    float: \"left\",\n                    marginRight: \"10% !important\",\n                    [theme.breakpoints.down(1025)]: {\n                      fontSize: \"12px\",\n                      marginLeft: \"2%\",\n                      marginTop: \"4%\",\n                    },\n                  }}\n                >\n                  Company\n                </Typography>\n                <Typography\n                  sx={{\n                    fontSize: \"16px\",\n                    textAlign: \"center\",\n                    width: \"100%\",\n                    color: \"#687173\",\n                    float: \"left\",\n                    marginTop: \"2%\",\n                    [theme.breakpoints.down(1025)]: {\n                      fontSize: \"12px\",\n                      marginLeft: \"2%\",\n                      marginTop: \"4%\",\n                    },\n                  }}\n                >\n                  I am looking for employees.\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.normalButton}>\n              <NormalButton\n                sx={{\n                  color: \"#fff\",\n                  textDecoration: \"none\",\n                  borderRadius: \"0 !important\",\n                }}\n                variant=\"contained\"\n                onClick={handleClick}\n              >\n                <Typography className={classes.lables}>\n                  Save & Continue\n                </Typography>\n              </NormalButton>\n            </div>\n          </Box>\n        </div>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default SelectProfile;\n","import { makeStyles } from \"@mui/styles\";\nimport { height } from \"@mui/system\";\n\nconst useStyles = makeStyles({\n  loginContainer: ({ theme }: any) => ({\n    width: \"90% !important\",\n    height: \"89% !important\",\n    marginTop: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(1024)]: {\n      padding: \"50px\",\n      justifyContent: \"center\",\n    },\n    // \"& >div\": {\n    //   [theme.breakpoints.down(1025)]: {\n    //     width: \"90% !important\",\n    //   },\n    // },\n  }),\n\n  stepper:() => ({\n    marginLeft:\"80%\",\n  }),\n\n  titleContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    alignItems: \"right\",\n  }),\n\n  brandLogo: ({ theme }: any) => ({\n    width: \"100%\",\n    \"& figure\": {\n      margin: 0,\n      width: \"140px\",\n      height: \"70px\",\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  checkBoxContainer: () => ({\n    float: \"left\",\n  }),\n\n  checkBox: () => ({\n    background: \" #FFFFFF\",\n    boxSizing: \"border-box\",\n    marginBottom: \"5px\",\n    \"&.css-rfs483-MuiFormControlLabel-root\": {\n      marginLeft: \"-26px\",\n      marginRight: \"0px\",\n      width: \"100%\",\n    },\n  }),\n\n  ckBox: () => ({\n    \"&.css-3zq233-MuiButtonBase-root-MuiCheckbox-root.Mui-checked\": {\n      color: \"#000\",\n    },\n  }),\n\n  endIconContainer: () => ({\n    backgroundColor: \"#0da4ce\",\n  }),\n\n  title: ({ theme }: any) => ({\n    width: \"100%\",\n\n    // margin: \"30px 160px 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n\n  verifyTitle: ({ theme }: any) => ({\n    border: \"1 px solid black\",\n    // width:\"43% !important\",\n  }),\n  resendMail: () => ({\n    \"&:hover\": {\n      background: \"none\",\n    },\n  }),\n\n  lables: ({ theme }: any) => ({\n    float: \"left\",\n    marginTop: \"1.5%\",\n    marginBottom: \"1.5%\",\n    // margin: \"25px 0 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n\n  forgotPassword: () => ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"3%\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n\n  profileSelector: () => ({\n    border: \"2px solid grey\",\n    width: \"43%\",\n    cursor: \"pointer\",\n  }),\n\n  inputField: () => ({\n    \n    marginBottom: \"1%\",\n    \"& input::-webkit-outer-spin-button\": {\n      WebkitAppearance: \"none\",\n      margin: 0,\n    },\n    \"& input::-webkit-inner-spin-button\": {\n      webkitAppearance: \"none\",\n      margin: 0,\n    },\n    // \"& input[type=number]\": {\n    //   MozAppearance: \"textfield\",\n    // },\n  }),\n\n  textfieldClass: () => ({\n  }),\n\n  selectProfile: ({ theme }: any) => ({\n    display: \"flex\",\n    height: \"100px\",\n    width: \"100%\",\n    marginRight: \"20%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"& figure\": {\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  normalButton: () => ({\n    marginTop: \"5%\",\n    width: \"100%\",\n  }),\n\n  activeButton: () => ({\n    color: \"#ffffff\",\n    backgroundColor: \"#0da4ce\",\n    maxHeight: \"40px\",\n  }),\n\n  formCommon: () => ({\n    alignItems: \"flex-start\",\n  }),\n  buttonContainer: () => ({\n    marginTop: \"5%\",\n    // marginRight: \"22%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  }),\n  dontHaveAccount: () => ({\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n  tools: () => ({\n    display: \"flex\",\n    width: \"100%\",\n  }),\n});\n\nexport { useStyles };\n"],"names":["NormalButton","children","rest","attributes","fullWidth","sx","padding","signUp","values","setSubmitting","history","dispatch","navigator","onLine","dataToSend","deviceId","checked","Utils","respData","data","statusCode","accessToken","email","name","userId","localStorage","setItem","push","type","payload","error","console","log","resendMail","getItem","deviceToken","getSkills","skills","verifyAccount","token","soleTraderProfileComplete","getState","profileSelectorReducer","userType","mobileNo","location","valToSend","map","val","TYPE","companySoleTraderDetail","theme","useTheme","classes","useStyles","useHistory","useDispatch","React","state","useSelector","handleProfileSelector","className","loginContainer","ml","fontWeight","color","titleContainer","style","brandLogo","imgUrl","LocalImages","title","fontSize","fontStretch","lineHeight","letterSpacing","float","marginTop","breakpoints","down","marginLeft","textAlign","width","marginRight","buttonContainer","profileSelector","onClick","border","selectProfile","normalButton","textDecoration","borderRadius","variant","lables","makeStyles","height","display","flexDirection","justifyContent","stepper","alignItems","margin","up","checkBoxContainer","checkBox","background","boxSizing","marginBottom","ckBox","endIconContainer","backgroundColor","verifyTitle","forgotPassword","cursor","inputField","WebkitAppearance","webkitAppearance","textfieldClass","activeButton","maxHeight","formCommon","dontHaveAccount","tools"],"sourceRoot":""}