{"version":3,"file":"static/js/617.51b9aa01.chunk.js","mappings":"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","sources":["components/autoComplete/index.tsx","components/button/NormalButton.tsx","components/inputfield/index.tsx","components/button/index.tsx","components/styledComponents/auth/signIn.ts","schema/index.ts","components/select/index.tsx","screen/signup/companyDetails.tsx","screen/signup/style.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Autocomplete,\n  TextField,\n  TextFieldProps,\n  AutocompleteValue,\n  Typography,\n} from \"@mui/material\";\nimport { useFormikContext, useField } from \"formik\";\n\ntype AutocompleteProps = {\n  name: string;\n  options: Array<string | { [value: string]: any }>;\n  optionSelected: (option: string | { [value: string]: any }) => string;\n  multiple?: boolean;\n  limitTags?: number;\n  defaultValue?: [string | { [value: string]: any }];\n  placeholderText?: string;\n  errors?: string;\n  touched?: boolean;\n};\n\nexport default function AutoComplete(props: AutocompleteProps) {\n  const { options, name, optionSelected, touched, errors, ...rest } = props;\n  const [field, meta] = useField(name);\n  const { setFieldValue } = useFormikContext();\n\n  console.log(name,meta);\n\n  return (\n    <div>\n      <Autocomplete\n        sx={{\n          [`& fieldset`]: {\n            borderRadius: 0,\n          },\n        }}\n        size=\"small\"\n        {...rest}\n        id=\"multiple-limit-tags\"\n        options={options}\n        getOptionLabel={optionSelected}\n        renderInput={(params) => {\n          return <TextField {...params} placeholder={\"Please Select\"} />;\n        }}\n        onChange={(evt: any, value: any) => {\n          setFieldValue(name, value);\n        }}\n      />\n      {touched && Boolean(errors) && (\n        <Typography variant=\"caption\" color=\"error\">\n          {errors}\n        </Typography>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, ButtonProps } from \"@mui/material\";\n\nexport default function NormalButton({ children, ...rest }: ButtonProps) {\n  const attributes: ButtonProps = {\n      ...rest,\n      fullWidth:true,\n  };\n  return <Button sx={{padding:\"20px 0px\"}} {...attributes}>{children}</Button>;\n}\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport { TextField, TextFieldProps } from \"@mui/material\";\n\n\nconst InputField = ({ name, ...rest }: TextFieldProps) => {\n  const [field, meta] = useField(name as string);\n\n  // console.log(name,meta);\n\n  const attributes: TextFieldProps = {\n    ...rest,\n    ...field,\n    fullWidth: true,\n    variant: \"outlined\",\n    value: field.value || \"\",\n    // autoComplete: \"off\"\n  };\n\n  if (meta && meta.touched && meta.error) {\n    attributes.error = true;\n    attributes.helperText = meta.error;\n  }\n\n  return (\n    <div>\n      <TextField\n        size=\"small\"\n        sx={{\n          \n          \"& label.Mui-focused\": {\n            borderColor: \"#424546\",\n          },\n          \"& .MuiInput-underline:after\": {\n            border: \"1px solid #424546\",\n          },\n          \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n              border: \"1px solid #424546\",\n            },\n            \"&:hover fieldset\": {\n              border: \"1px solid #424546\",\n            },\n            \"&.Mui-focused fieldset\": {\n              boxShadow: \"-2px 0px 23px -2px rgba(0,0,0,0.33)\",\n              // -webkit-box-shadow: -2px 0px 23px -2px rgba(0,0,0,0.33);\n              // -moz-box-shadow: -2px 0px 23px -2px rgba(0,0,0,0.33);\n            },\n          },\n          [`& fieldset`]: {\n            borderRadius: 0,\n          },\n        }}\n        {...attributes}\n      />\n    </div>\n  );\n};\n\nexport default InputField;\n","import React from \"react\";\nimport { Button, ButtonProps } from \"@mui/material\";\nimport { useFormikContext } from \"formik\";\n\nconst ActionButton = ({ children, ...rest }: ButtonProps) => {\n  const { submitForm } = useFormikContext();\n  const handleSubmit = () => {\n    submitForm();\n  };\n  const attributes: ButtonProps = {\n    ...rest,\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n  return <Button {...attributes}>{children}</Button>;\n};\n\nexport default ActionButton;","import { styled } from \"@mui/system\";\nimport ActionButton from \"../../button\";\nimport NormalButton from \"../../button/NormalButton\";\n\nexport const InnerMainDiv = styled(\"div\")({\n  backgroundColor: \"#fff\",\n  width: \"50%\",\n});\n\nexport const ActiveButton = styled(ActionButton)({\n    width: \"100%\",\n    height: \"54px\",\n    marginTop: \"20px\",\n    borderRadius:\"0 !important\",\n  });\n\n  export const CommonButton =styled(NormalButton)({\n    width: \"100%\",\n    height: \"54px\",\n    marginTop: \"20px\",\n    borderRadius:\"0 !important\",\n  });\n\nexport const HeadingText = styled(\"span\")({\n    // width:\"100%\",\n  fontSize: \"30px\",\n  fontWeight: \"bold\",\n  fontStretch: \"normal\",\n  lineHeight: \"normal\",\n  letterSpacing: \"normal\",\n  color: \"#4f4f4f\",\n});\n\nexport const SmallText = styled(\"span\")({\n  fontSize: \"16px\",\n  fontStretch: \"normal\",\n  lineHeight: \"1.5\",\n  color: \"#828282\",\n  margin: \"4px 0 42px 0\",\n});","import * as Yup from \"yup\";\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst LoginSchema = () => {\n  return Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter valid email\")\n      .max(50, \"Email can be maximum of hundred characters\")\n      .required(\"Email field cannot be blank\"),\n    password: Yup.string().trim().required(\"Password field cannot be blank\"),\n  });\n};\nconst MobileNumber = () => {\n  return Yup.object().shape({\n    PhoneNumber: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n  });\n};\nconst SignupSchema = () => {\n  return Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .max(100, \"Name can be maximum of hundred characters\")\n\n      .required(\"Name field cannot be blank\"),\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter valid email\")\n      .max(100, \"Email can be maximum of hundred characters\")\n\n      .required(\"Email field cannot be blank\"),\n    password: Yup.string().trim().required(\"Password field cannot be blank\"),\n    checked: Yup.boolean().required(\"Please Mark this box\"),\n  });\n};\nconst ChangePasswordScheema = () => {\n  return Yup.object().shape({\n    currentpassword: Yup.string()\n      .trim()\n      .required(\"Current Password field cannot be blank\"),\n    newpassword: Yup.string()\n      .trim()\n      .min(6, \"Password should be minimum of six characters\")\n      .max(20, \"Password should be maximum of twenty characters\")\n\n      .required(\"New Password field cannot be blank\")\n      .test(\n        \"notBothAtTheSameTime\",\n        \"Current Password and New Password should not be the same\",\n        function (newpassword) {\n          const { currentpassword } = this.parent;\n          if (currentpassword === newpassword) {\n            return false;\n          }\n          return true;\n        }\n      ),\n  });\n};\n\nconst CompanyContactSchema = () => {\n  return Yup.object().shape({\n    PhoneNumber: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n    OfficeNumber: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n  });\n};\n\nconst BusinessDetailSchema = () => {\n  return Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .max(100, \"Name can be maximum of hundred characters\")\n\n      .required(\"Name field cannot be blank\"),\n    phone_number: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"Phone number cannot be less than 10 digits\"),\n    location: Yup.object().required(\"Please enter the location\"),\n\n    checked: Yup.boolean().required(\"Please Mark this box\"),\n  });\n};\n\nconst SoleTraderSchema = () =>\n  Yup.object().shape({\n    businessName: Yup.string().trim().required(\"Required\"),\n    abnNumber: Yup.string()\n      .trim()\n      .max(10, \"Maximum limit is 10 digits\")\n      .required(\"Required\"),\n    location: Yup.object()\n      .shape({\n        address: Yup.string(),\n        coordinates: Yup.array(),\n      })\n      .required(\"Location Required\"),\n    skills: Yup.array().min(1, \"Required\"),\n    industryExp: Yup.number()\n      .max(20, \"Cannot exceed 20 years of Experience\")\n      .required(\"Required\"),\n  });\n\nconst ForgotPassWordSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter a valid email\")\n      .required(\"Email required\"),\n  });\n\nconst ResetPasswordSchema = () =>\n  Yup.object().shape({\n    newPassword: Yup.string().trim().required(\"Password filed is required\"),\n    confirmPassword: Yup.string()\n      .trim()\n      .required(\"Password field is required\")\n      .test(\n        \"check confirmPassword\",\n        \"Password does not match\",\n        function (value: any) {\n          const { newPassword } = this.parent;\n          return value === newPassword;\n        }\n      ),\n  });\n\nconst Schema = {\n  LoginSchema,\n  SignupSchema,\n  ChangePasswordScheema,\n  CompanyContactSchema,\n  MobileNumber,\n  BusinessDetailSchema,\n  SoleTraderSchema,\n  ForgotPassWordSchema,\n  ResetPasswordSchema,\n};\n\nexport default Schema;\n","const dropdownData = [\n  { value: \"Maintainance Fitter\", label: \"Maintainance Fitter\" },\n  { value: \"Maintainance Manager\", label: \"Maintainance Fitter\" },\n  { value: \"Project Manager\", label: \"Project Manager\" },\n  { value: \"Steel Welding\", label: \"Steel Welding\" },\n];\n\nexport { dropdownData };\n","import React from \"react\";\nimport ImageContainer from \"../../components/ImageContainer\";\nimport Schema from \"../../schema\";\nimport { dropdownData } from \"../../components/select\";\nimport InputField from \"../../components/inputfield\";\nimport AutoComplete from \"../../components/autoComplete\";\nimport { Checkbox } from \"@mui/material\";\nimport Utils from \"../../Utils\";\n\nimport {\n  HeadingText,\n  ActiveButton,\n  InnerMainDiv,\n  SmallText,\n} from \"../../components/styledComponents/auth/signIn\";\n\nimport location from \"../../data/location\";\nimport { Link } from \"react-router-dom\";\nimport { useStyles } from \"./style\";\nimport { useTheme } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik, Form } from \"formik\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport LocalImages from \"../../Utils/images\";\n\nconst CompanyDetails = () => {\n  const theme = useTheme();\n  const classes = useStyles({ theme });\n  return (\n    <>\n      <HelmetProvider>\n        <div className={classes.loginContainer}>\n        <div>\n            <Typography sx={{ ml: \"90%\", fontWeight: \"500\", color: \"#BDBDBD\" }}>\n              03/03\n            </Typography>\n            <Typography sx={{ ml: \"75%\", fontWeight: \"600\", color: \"#828282\" }}>\n              Business Details\n            </Typography>\n          </div>\n          <Box className={classes.titleContainer}>\n            <ImageContainer\n              style={classes.brandLogo}\n              imgUrl={LocalImages.Logo}\n            />\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"30px\",\n                  fontWeight: \"bold\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#4f4f4f\",\n                  float: \"left\",\n                  marginTop: \"4%\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"20px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Your Company Details\n              </Typography>\n            </div>\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"15px\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#687173\",\n                  float: \"left\",\n                  marginTop: \"2%\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"12px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Tell us about your business and what you do.\n              </Typography>\n            </div>\n          </Box>\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n            }}\n            validationSchema={Schema.BusinessDetailSchema}\n            onSubmit={(value, { setSubmitting }) => {\n              // dispatch(login(value, history, setSubmitting));\n            }}\n          >\n            <Form>\n              <div className={classes.lables}>\n                <Typography>Business Name*</Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  placeholder=\"Enter your Business Name\"\n                  name=\"name\"\n                  type={\"name\"}\n                  // touched={touched}\n                  // errors={errors}</Form>\n                />\n              </div>\n              <div className={classes.lables}>\n                <Typography>ABN*</Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  className={classes.textfieldClass}\n                  placeholder=\"Enter Your Business Number\"\n                  name=\"phone_number\"\n                  type={\"number\"}\n                />\n              </div>\n              <div className={classes.lables}>\n                <Typography>ADDRESS*</Typography>\n                <Typography className={classes.lables}></Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  className={classes.inputField}\n                  placeholder=\"Location\"\n                  name=\"location\"\n                  type={\"text\"}\n                />\n              </div>\n              <div className={classes.lables}>\n                <Typography>AVAILABLE TRADES*</Typography>\n              </div>\n              <div className={classes.inputField}>\n                <AutoComplete\n                  name=\"k\"\n                  multiple\n                  limitTags={2}\n                  options={dropdownData}\n                  optionSelected={(\n                    option: string | { [value: string]: string }\n                  ) => {\n                    if (typeof option === \"string\") return option as string;\n                    else return option?.value as string;\n                  }}\n                />\n              </div>\n              <div className={classes.lables}>\n                <Typography>INDUSTRY EXPERIENCE*</Typography>\n              </div>\n              <div className={classes.inputField}>\n                <AutoComplete\n                  name=\"l\"\n                  multiple\n                  limitTags={2}\n                  options={dropdownData}\n                  optionSelected={(\n                    option: string | { [value: string]: string }\n                  ) => {\n                    if (typeof option === \"string\") return option as string;\n                    else return option?.value as string;\n                  }}\n                />\n              </div>\n              <Link to={\"#\"}>\n                <ActiveButton\n                  className={classes.activeButton}\n                  sx={{ color: \"#fff\", textDecoration: \"none\" }}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  <Typography className={classes.lables}>\n                    Save & Continue\n                  </Typography>\n                </ActiveButton>\n              </Link>\n            </Form>\n          </Formik>\n        </div>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default CompanyDetails;\n","import { makeStyles } from \"@mui/styles\";\nimport { height } from \"@mui/system\";\n\nconst useStyles = makeStyles({\n  loginContainer: ({ theme }: any) => ({\n    width: \"90% !important\",\n    height: \"89% !important\",\n    marginTop: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(1024)]: {\n      padding: \"50px\",\n      justifyContent: \"center\",\n    },\n    // \"& >div\": {\n    //   [theme.breakpoints.down(1025)]: {\n    //     width: \"90% !important\",\n    //   },\n    // },\n  }),\n\n  stepper:() => ({\n    marginLeft:\"80%\",\n  }),\n\n  titleContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    alignItems: \"right\",\n  }),\n\n  brandLogo: ({ theme }: any) => ({\n    width: \"100%\",\n    \"& figure\": {\n      margin: 0,\n      width: \"140px\",\n      height: \"70px\",\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  checkBoxContainer: () => ({\n    float: \"left\",\n  }),\n\n  checkBox: () => ({\n    background: \" #FFFFFF\",\n    boxSizing: \"border-box\",\n    marginBottom: \"5px\",\n    \"&.css-rfs483-MuiFormControlLabel-root\": {\n      marginLeft: \"-26px\",\n      marginRight: \"0px\",\n      width: \"100%\",\n    },\n  }),\n\n  ckBox: () => ({\n    \"&.css-3zq233-MuiButtonBase-root-MuiCheckbox-root.Mui-checked\": {\n      color: \"#000\",\n    },\n  }),\n\n  endIconContainer: () => ({\n    backgroundColor: \"#0da4ce\",\n  }),\n\n  title: ({ theme }: any) => ({\n    width: \"100%\",\n\n    // margin: \"30px 160px 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n\n  verifyTitle: ({ theme }: any) => ({\n    border: \"1 px solid black\",\n    // width:\"43% !important\",\n  }),\n  resendMail: () => ({\n    \"&:hover\": {\n      background: \"none\",\n    },\n  }),\n\n  lables: ({ theme }: any) => ({\n    float: \"left\",\n    marginTop: \"1.5%\",\n    marginBottom: \"1.5%\",\n    // margin: \"25px 0 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n\n  forgotPassword: () => ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"3%\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n\n  profileSelector: () => ({\n    border: \"2px solid grey\",\n    width: \"43%\",\n    cursor: \"pointer\",\n  }),\n\n  inputField: () => ({\n    \n    marginBottom: \"1%\",\n    \"& input::-webkit-outer-spin-button\": {\n      WebkitAppearance: \"none\",\n      margin: 0,\n    },\n    \"& input::-webkit-inner-spin-button\": {\n      webkitAppearance: \"none\",\n      margin: 0,\n    },\n    // \"& input[type=number]\": {\n    //   MozAppearance: \"textfield\",\n    // },\n  }),\n\n  textfieldClass: () => ({\n  }),\n\n  selectProfile: ({ theme }: any) => ({\n    display: \"flex\",\n    height: \"100px\",\n    width: \"100%\",\n    marginRight: \"20%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"& figure\": {\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  normalButton: () => ({\n    marginTop: \"5%\",\n    width: \"100%\",\n  }),\n\n  activeButton: () => ({\n    color: \"#ffffff\",\n    backgroundColor: \"#0da4ce\",\n    maxHeight: \"40px\",\n  }),\n\n  formCommon: () => ({\n    alignItems: \"flex-start\",\n  }),\n  buttonContainer: () => ({\n    marginTop: \"5%\",\n    // marginRight: \"22%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  }),\n  dontHaveAccount: () => ({\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n  tools: () => ({\n    display: \"flex\",\n    width: \"100%\",\n  }),\n});\n\nexport { useStyles };\n"],"names":["AutoComplete","props","options","name","optionSelected","touched","errors","rest","useField","meta","setFieldValue","useFormikContext","console","log","sx","borderRadius","size","id","getOptionLabel","renderInput","params","placeholder","onChange","evt","value","Boolean","variant","color","NormalButton","children","attributes","fullWidth","padding","field","error","helperText","borderColor","border","boxShadow","submitForm","onClick","Button","ActiveButton","styled","backgroundColor","width","ActionButton","height","marginTop","CommonButton","fontSize","fontWeight","fontStretch","lineHeight","letterSpacing","margin","phoneRegExp","Schema","LoginSchema","Yup","shape","email","trim","max","required","password","SignupSchema","checked","ChangePasswordScheema","currentpassword","newpassword","min","test","this","parent","CompanyContactSchema","PhoneNumber","matches","OfficeNumber","MobileNumber","BusinessDetailSchema","phone_number","location","SoleTraderSchema","businessName","abnNumber","address","coordinates","skills","industryExp","ForgotPassWordSchema","ResetPasswordSchema","newPassword","confirmPassword","dropdownData","label","theme","useTheme","classes","useStyles","className","loginContainer","Typography","ml","Box","titleContainer","ImageContainer","style","brandLogo","imgUrl","LocalImages","title","float","breakpoints","down","marginLeft","initialValues","validationSchema","onSubmit","setSubmitting","lables","inputField","type","textfieldClass","multiple","limitTags","option","to","activeButton","textDecoration","makeStyles","display","flexDirection","justifyContent","stepper","alignItems","up","checkBoxContainer","checkBox","background","boxSizing","marginBottom","marginRight","ckBox","endIconContainer","verifyTitle","resendMail","forgotPassword","profileSelector","cursor","WebkitAppearance","webkitAppearance","selectProfile","normalButton","maxHeight","formCommon","buttonContainer","dontHaveAccount","tools"],"sourceRoot":""}