{"version":3,"file":"static/js/492.5ed8b855.chunk.js","mappings":"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","sources":["screen/signup/actions.ts","screen/signup/style.tsx","screen/signup/verify.tsx"],"sourcesContent":["\nimport Utils from \"../../Utils\";\n\nexport const signUp = (values: any, setSubmitting: any, history: any) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n    let dataToSend = {\n      ...values,\n      deviceId: \"string\",\n    };\n\n    delete dataToSend.checked;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.signUp,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          const { accessToken, email, name, userId } = data.data;\n\n          localStorage.setItem(\"verify_account_token\", accessToken);\n          localStorage.setItem(\"user_email\", email);\n          localStorage.setItem(\"user_name\", name);\n          localStorage.setItem(\"user_id\", userId);\n\n          history.push(Utils.Pathname.VERIFY);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          setSubmitting(false);\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          setSubmitting(false);\n          Utils.showAlert(2, data.message);\n          \n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        \n        setSubmitting(false);\n        let { data } = error;\n        console.log(data);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n        Utils.showAlert(2, data.message);\n      }\n    );\n  };\n};\n\nexport const resendMail = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      \n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      email: localStorage.getItem(\"user_email\") || \"\",\n      type: 1,\n      deviceId: \"string\",\n      deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n    };\n\n    Utils.API.postApiCall(\n      Utils.endpoint.resendLink,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          \n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        \n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const getSkills = () => {\n  return (dispatch: any) => {\n    Utils.API.getApiCall(\n      Utils.endpoint.skills,\n      ``,\n      (respData: any) => {\n        let { data } = respData;\n        if (data.statusCode === 200) {\n          console.log(data);\n          dispatch({\n            type: Utils.ActionName.SKILLS,\n            payload: {\n              skills: [...data.data.skills],\n            },\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n      }\n    );\n  };\n};\n\nexport const verifyAccount = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      \n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      token: localStorage.getItem(\"verify_account_token\") || \"\",\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.verify,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n        console.log(data);\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          localStorage.setItem(\"accessToken\", data.data.accessToken);\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          \n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        console.log(data);\n        \n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const soleTraderProfileComplete = (\n  values: { [key: string]: any },\n  history: any\n) => {\n  return (dispatch: Function, getState: Function) => {\n    if (!navigator.onLine) {\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    const { userType, mobileNo } = getState().profileSelectorReducer;\n\n    let location = values.location;\n    let valToSend = { ...values };\n    delete valToSend.location;\n    valToSend.skills = valToSend.skills.map((val: any) => val.TYPE);\n\n    let dataToSend = {\n      userType,\n      mobileNo: `${mobileNo}`,\n      location,\n      companySoleTraderDetail: { ...valToSend },\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"DeviceToken\",\n    };\n\n\n    Utils.API.putApiCall(\n      Utils.endpoint.profileComplete,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n          localStorage.clear();\n          history.push(Utils.Pathname.Dashboard);\n\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const CompanyProfileComplete = (\n  values: { [key: string]: any },\n  history: any\n) => {\n  return (dispatch: Function, getState: Function) => {\n    if (!navigator.onLine) {\n      \n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    const { userType, mobileNo, companyDetail } =\n      getState().profileSelectorReducer;\n\n    let location = values.location;\n    let valToSend = { ...values };\n    delete valToSend.location;\n    valToSend.availableTrades = valToSend.skills.map((val: any) => val.TYPE);\n    delete valToSend.skills;\n\n    let dataToSend = {\n      userType,\n      mobileNo: `${mobileNo}`,\n      location,\n      companyDetail: { ...valToSend, ...companyDetail },\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"deviceToken\",\n    };\n\n    console.log(dataToSend);\n\n    Utils.API.putApiCall(\n      Utils.endpoint.profileComplete,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n          localStorage.clear();\n          history.push(Utils.Pathname.Dashboard);\n          \n\n          Utils.showAlert(1, data.message);\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        \n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\n","import { makeStyles } from \"@mui/styles\";\nimport { flexbox } from \"@mui/system\";\n\n\nconst useStyles = makeStyles({\n\n  signupContainer:({theme}:any) => ({\n    width:\"100%\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    justifyContent:\"space-between\",\n    [theme.breakpoints.down(1024)]: {\n      justifyContent: \"center\",\n      flexDirection:\"column-reverse\",\n      \n    },\n\n  }),\n  loginContainer: ({ theme }: any) => ({\n    width: \"98% !important\",\n    height: \"auto !important\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(1024)]: {\n      // padding: \"50px\",\n      marginLeft:\"10%\",\n      width:\"80% !important\",\n      justifyContent: \"center\",\n    },\n  }),\n\n  verifyContainer:({theme}:any) => ({\n    marginTop:\"40%\",\n    width: \"90% !important\",\n    height: \"auto !important\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(1024)]: {\n      width:\"85% !important\",\n      marginLeft:\"5%\",\n      justifyContent: \"center\",\n    },\n  }),\n\n  details:({theme}:any)=> ({\n    width:\"50%\",\n    marginLeft:\"64.5%\",\n    [theme.breakpoints.down(1300)]: {\n      marginLeft:\"64\",\n    },\n  }),\n\n  step:({theme}:any) => ({\n    width:\"36%\",\n    marginTop:\"5%\",\n    // marginLeft:\"5%\",\n    [theme.breakpoints.down(1025)]: {\n      marginLeft:\"60%\"\n    },\n\n    \n  }),\n\n  \n\n  titleContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    alignItems: \"right\",\n  }),\n\n  brandLogo: ({ theme }: any) => ({\n    width: \"100%\",\n    \"& figure\": {\n      margin: 0,\n      width: \"153px\",\n      height: \"46px\",\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  checkBoxContainer: () => ({\n    float: \"left\",\n  }),\n\n  checkBox: () => ({\n    background: \" #FFFFFF\",\n    boxSizing: \"border-box\",\n    marginBottom: \"5px\",\n    \"&.css-rfs483-MuiFormControlLabel-root\": {\n      marginLeft: \"-26px\",\n      marginRight: \"0px\",\n      width: \"100%\",\n    },\n  }),\n\n  ckBox: () => ({\n    \"&.css-3zq233-MuiButtonBase-root-MuiCheckbox-root.Mui-checked\": {\n      color: \"#000\",\n    },\n  }),\n\n  endIconContainer: () => ({\n    backgroundColor: \"#0da4ce\",\n  }),\n\n  title: ({ theme }: any) => ({\n    width: \"100%\",\n  }),\n\n  verifyTitle: ({ theme }: any) => ({\n    border: \"1 px solid black\",\n  }),\n  resendMail: () => ({\n    \"&:hover\": {\n      background: \"none\",\n    },\n  }),\n\n  lables: ({ theme }: any) => ({\n    float: \"left\",\n    marginBottom: \"3%\",\n  }),\n\n  forgotPassword: () => ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"3%\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n\n  profileSelector: ({theme}:any) => ({\n    border: \"2px solid grey\",\n    width: \"43%\",\n    cursor: \"pointer\",\n    [theme.breakpoints.down(1025)]: {\n      height: \"105px\",\n    },\n  }),\n\n  inputField: () => ({\n    \n    marginBottom: \"2%\",\n    \"& input::-webkit-outer-spin-button\": {\n      WebkitAppearance: \"none\",\n      margin: 0,\n    },\n    \"& input::-webkit-inner-spin-button\": {\n      webkitAppearance: \"none\",\n      margin: 0,\n    },\n  }),\n\n  textfieldClass: () => ({\n  }),\n\n  selectProfile: ({ theme }: any) => ({\n    display: \"flex\",\n    height: \"65px\",\n    width: \"100%\",\n    marginRight: \"20%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"& figure\": {\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  normalButton: () => ({\n    marginTop: \"5%\",\n    width: \"100%\",\n  }),\n\n  activeButton: () => ({\n    color: \"#ffffff\",\n    backgroundColor: \"#0da4ce\",\n    maxHeight: \"40px\",\n  }),\n\n  formCommon: () => ({\n    alignItems: \"flex-start\",\n  }),\n  buttonContainer: ({theme}:any) => ({\n    marginTop: \"5%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(1025)]: {\n     width:\"100%\"\n    },\n  }),\n  dontHaveAccount: () => ({\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n  tools: () => ({\n    display: \"flex\",\n    width: \"100%\",\n  }),\n});\n\nexport { useStyles };\n","import React from \"react\";\nimport ImageContainer from \"../../components/ImageContainer\";\nimport Schema from \"../../schema\";\nimport InputField from \"../../components/inputfield\";\nimport Utils from \"../../Utils\";\n\nimport {\n  HeadingText,\n  CommonButton,\n  InnerMainDiv,\n  SmallText,\n} from \"../../components/styledComponents/auth/signIn\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useStyles } from \"./style\";\nimport { useTheme } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik, Form } from \"formik\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useDispatch } from \"react-redux\";\nimport LocalImages from \"../../Utils/images\";\nimport NormalButton from \"../../components/button/NormalButton\";\nimport { resendMail, verifyAccount } from \"./actions\";\n\nconst Verify = () => {\n  const theme = useTheme();\n  const classes = useStyles({ theme });\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleResendEmail = () => {\n    dispatch(resendMail());\n  };\n\n  return (\n    <>\n      <HelmetProvider>\n        <div className={classes.verifyContainer}>\n          <Box>\n            <div className={classes.titleContainer}>\n              <ImageContainer\n                style={classes.brandLogo}\n                imgUrl={LocalImages.Logo}\n              />\n              <div className={classes.title}>\n                <Typography\n                  sx={{\n                    fontSize: \"24px\",\n                    fontWeight: \"bold\",\n                    fontStretch: \"normal\",\n                    lineHeight: \"normal\",\n                    letterSpacing: \"normal\",\n                    color: \"#4f4f4f\",\n                    float: \"left\",\n                    marginTop: \"4%\",\n                    [theme.breakpoints.down(1025)]: {\n                      fontSize: \"20px\",\n                      marginLeft: \"2%\",\n                      marginTop: \"4%\",\n                    },\n                  }}\n                >\n                  Verify your email\n                </Typography>\n              </div>\n              <div className={classes.verifyTitle}>\n                <Typography\n                  sx={{\n                    fontSize: \"15px\",\n                    textAlign: \"left\",\n                    width: \"100%\",\n                    fontStretch: \"normal\",\n                    lineHeight: \"normal\",\n                    letterSpacing: \"normal\",\n                    color: \"#687173\",\n                    float: \"left\",\n                    marginTop: \"2%\",\n                    marginRight: \"10% !important\",\n                    [theme.breakpoints.down(1025)]: {\n                      fontSize: \"12px\",\n                      marginLeft: \"2%\",\n                      marginTop: \"4%\",\n                    },\n                  }}\n                >\n                  Your Account has been successfully registered. Confirm your\n                  email address to start using Infinite Trades\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.buttonContainer}>\n              <CommonButton\n                // className={classes.resendMail}\n                sx={{\n                  color: \"black\",\n                  textDecoration: \"none\",\n                  textTransform: \"capitalize\",\n                  width: \"208px\",\n                  height: \"56px\",\n                  border: \"1px solid black\",\n                  backgroundColor: \"#fff\",\n                  \"&:hover\": {\n                    background: \"none\",\n                  },\n                  [theme.breakpoints.down(1025)]: {\n                    width: \"131px !important\",\n                    height: \"19px\"\n                  },\n                }}\n                type=\"submit\"\n                variant=\"contained\"\n                onClick={handleResendEmail}\n              >\n                <Typography className={classes.lables} >Resend Email</Typography>\n              </CommonButton>\n              <CommonButton\n                // className={classes.activeButton}\n                sx={{\n                  color: \"#fff\", textDecoration: \"none\",\n                   width: \"208px\", \n                   height: \"56px\", \n                   textTransform: \"capitalize\", \n                   [theme.breakpoints.down(1025)]: {\n                    width: \"131px\",\n                    height: \"19px\"\n                  },\n                }}\n                variant=\"contained\"\n                onClick={() => history.push(Utils.Pathname.LOGIN)}\n              >\n                <Typography className={classes.lables}>Login</Typography>\n              </CommonButton>\n            </div>\n          </Box>\n        </div>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default Verify;\n"],"names":["signUp","values","setSubmitting","history","dispatch","navigator","onLine","dataToSend","deviceId","checked","Utils","respData","data","statusCode","accessToken","email","name","userId","localStorage","setItem","push","type","payload","message","error","console","log","resendMail","getItem","deviceToken","getSkills","skills","verifyAccount","token","soleTraderProfileComplete","getState","profileSelectorReducer","userType","mobileNo","location","valToSend","map","val","TYPE","companySoleTraderDetail","clear","CompanyProfileComplete","companyDetail","availableTrades","useStyles","makeStyles","signupContainer","theme","width","display","flexDirection","justifyContent","breakpoints","down","loginContainer","height","marginLeft","verifyContainer","marginTop","details","step","titleContainer","alignItems","brandLogo","margin","up","checkBoxContainer","float","checkBox","background","boxSizing","marginBottom","marginRight","ckBox","color","endIconContainer","backgroundColor","title","verifyTitle","border","lables","forgotPassword","textDecoration","profileSelector","cursor","inputField","WebkitAppearance","webkitAppearance","textfieldClass","selectProfile","normalButton","activeButton","maxHeight","formCommon","buttonContainer","dontHaveAccount","tools","useTheme","classes","useHistory","useDispatch","className","style","imgUrl","LocalImages","sx","fontSize","fontWeight","fontStretch","lineHeight","letterSpacing","textAlign","textTransform","variant","onClick"],"sourceRoot":""}