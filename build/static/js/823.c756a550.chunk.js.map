{"version":3,"file":"static/js/823.c756a550.chunk.js","mappings":"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","sources":["components/inputfield/index.tsx","schema/index.ts","screen/signup/actions.ts","screen/signup/index.tsx","screen/signup/style.tsx"],"sourcesContent":["import React from \"react\";\nimport { useField } from \"formik\";\nimport { TextField, TextFieldProps } from \"@mui/material\";\n\n\nconst InputField = ({ name, ...rest }: TextFieldProps) => {\n  const [field, meta] = useField(name as string);\n\n  // console.log(name,meta);\n\n  const attributes: TextFieldProps = {\n    ...rest,\n    ...field,\n    fullWidth: true,\n    variant: \"outlined\",\n    value: field.value || \"\",\n    // autoComplete: \"off\"\n  };\n\n  if (meta && meta.touched && meta.error) {\n    attributes.error = true;\n    attributes.helperText = meta.error;\n  }\n\n  return (\n    <div>\n      <TextField\n        size=\"small\"\n        sx={{\n          \n          \"& label.Mui-focused\": {\n            borderColor: \"#424546\",\n          },\n          \"& .MuiInput-underline:after\": {\n            border: \"1px solid #424546\",\n          },\n          \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n              border: \"1px solid #424546\",\n            },\n            \"&:hover fieldset\": {\n              border: \"1px solid #424546\",\n            },\n            \"&.Mui-focused fieldset\": {\n              boxShadow: \"-2px 0px 23px -2px rgba(0,0,0,0.33)\",\n              // -webkit-box-shadow: -2px 0px 23px -2px rgba(0,0,0,0.33);\n              // -moz-box-shadow: -2px 0px 23px -2px rgba(0,0,0,0.33);\n            },\n          },\n          [`& fieldset`]: {\n            borderRadius: 0,\n          },\n        }}\n        {...attributes}\n      />\n    </div>\n  );\n};\n\nexport default InputField;\n","import * as Yup from \"yup\";\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst LoginSchema = () => {\n  return Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter valid email\")\n      .max(50, \"Email can be maximum of hundred characters\")\n      .required(\"Email field cannot be blank\"),\n    password: Yup.string().trim().required(\"Password field cannot be blank\"),\n  });\n};\nconst MobileNumber = () => {\n  return Yup.object().shape({\n    PhoneNumber: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n  });\n};\nconst SignupSchema = () => {\n  return Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .max(100, \"Name can be maximum of hundred characters\")\n\n      .required(\"Name field cannot be blank\"),\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter valid email\")\n      .max(100, \"Email can be maximum of hundred characters\")\n\n      .required(\"Email field cannot be blank\"),\n    password: Yup.string().trim().required(\"Password field cannot be blank\"),\n    checked: Yup.boolean().required(\"Please Mark this box\"),\n  });\n};\nconst ChangePasswordScheema = () => {\n  return Yup.object().shape({\n    currentpassword: Yup.string()\n      .trim()\n      .required(\"Current Password field cannot be blank\"),\n    newpassword: Yup.string()\n      .trim()\n      .min(6, \"Password should be minimum of six characters\")\n      .max(20, \"Password should be maximum of twenty characters\")\n\n      .required(\"New Password field cannot be blank\")\n      .test(\n        \"notBothAtTheSameTime\",\n        \"Current Password and New Password should not be the same\",\n        function (newpassword) {\n          const { currentpassword } = this.parent;\n          if (currentpassword === newpassword) {\n            return false;\n          }\n          return true;\n        }\n      ),\n  });\n};\n\nconst CompanyContactSchema = () => {\n  return Yup.object().shape({\n    mobileNo: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n    officeNo: Yup.string()\n      .required(\"Please enter your Office number\")\n      .matches(phoneRegExp, \"Office number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n  });\n};\n\nconst BusinessDetailSchema = () => {\n  return Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .max(100, \"Name can be maximum of hundred characters\")\n\n      .required(\"Name field cannot be blank\"),\n    phone_number: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"Phone number cannot be less than 10 digits\"),\n    location: Yup.object().required(\"Please enter the location\"),\n\n    checked: Yup.boolean().required(\"Please Mark this box\"),\n  });\n};\n\nconst SoleTraderSchema = () =>\n  Yup.object().shape({\n    businessName: Yup.string().trim().required(\"Required\"),\n    abnNumber: Yup.string()\n      .trim()\n      .max(10, \"Maximum limit is 10 digits\")\n      .required(\"Required\"),\n    location: Yup.object()\n      .shape({\n        address: Yup.string(),\n        coordinates: Yup.array(),\n      })\n      .required(\"Location Required\"),\n    skills: Yup.array().min(1, \"Required\"),\n    industryExp: Yup.number()\n      .max(20, \"Cannot exceed 20 years of Experience\")\n      .required(\"Required\"),\n  });\n\nconst ForgotPassWordSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter a valid email\")\n      .required(\"Email required\"),\n  });\n\nconst ResetPasswordSchema = () =>\n  Yup.object().shape({\n    newPassword: Yup.string().trim().required(\"Password filed is required\"),\n    confirmPassword: Yup.string()\n      .trim()\n      .required(\"Password field is required\")\n      .test(\n        \"check confirmPassword\",\n        \"Password does not match\",\n        function (value: any) {\n          const { newPassword } = this.parent;\n          return value === newPassword;\n        }\n      ),\n  });\n\nconst Schema = {\n  LoginSchema,\n  SignupSchema,\n  ChangePasswordScheema,\n  CompanyContactSchema,\n  MobileNumber,\n  BusinessDetailSchema,\n  SoleTraderSchema,\n  ForgotPassWordSchema,\n  ResetPasswordSchema,\n};\n\nexport default Schema;\n","import { ResetPasswordModel } from \"../../model\";\nimport Utils from \"../../Utils\";\n\nexport const signUp = (values: any, setSubmitting: any, history: any) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n    let dataToSend = {\n      ...values,\n      deviceId: \"string\",\n    };\n\n    delete dataToSend.checked;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.signUp,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          const { accessToken, email, name, userId } = data.data;\n\n          localStorage.setItem(\"verify_account_token\", accessToken);\n          localStorage.setItem(\"user_email\", email);\n          localStorage.setItem(\"user_name\", name);\n          localStorage.setItem(\"user_id\", userId);\n\n          history.push(Utils.Pathname.VERIFY);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          setSubmitting(false);\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          setSubmitting(false);\n          Utils.showAlert(2, data.message);\n          // dispatch({\n          //   type: Utils.ActionName.SIGNUP,\n          //   payload: {\n          //     username: \"\",\n          //     password: \"\",\n          //     accountError: data.message,\n          //   },\n          // });\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        setSubmitting(false);\n        let { data } = error;\n        console.log(data);\n        // Utils.showAlert(2, data.message);\n        // dispatch({\n        //   type: Utils.ActionName.SIGNUP,\n        //   payload: {\n        //     username: \"\",\n        //     password: \"\",\n        //     accountError: data.messa ge,\n        //   },\n        // });\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const resendMail = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      email: localStorage.getItem(\"user_email\") || \"\",\n      type: 1,\n      deviceId: \"string\",\n      deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n    };\n\n    Utils.API.postApiCall(\n      Utils.endpoint.resendLink,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const getSkills = () => {\n  return (dispatch: any) => {\n    Utils.API.getApiCall(\n      Utils.endpoint.skills,\n      ``,\n      (respData: any) => {\n        let { data } = respData;\n        if (data.statusCode === 200) {\n          console.log(data);\n          dispatch({\n            type: Utils.ActionName.SKILLS,\n            payload: {\n              skills: [...data.data.skills],\n            },\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n      }\n    );\n  };\n};\n\nexport const verifyAccount = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      token: localStorage.getItem(\"verify_account_token\") || \"\",\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.verify,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n        console.log(data);\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          localStorage.setItem(\"accessToken\", data.data.accessToken);\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const soleTraderProfileComplete = (\n  values: { [key: string]: any },\n  history: any\n) => {\n  return (dispatch: Function, getState: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    const { userType, mobileNo } = getState().profileSelectorReducer;\n\n    let location = values.location;\n    let valToSend = { ...values };\n    delete valToSend.location;\n    valToSend.skills = valToSend.skills.map((val: any) => val.TYPE);\n\n    let dataToSend = {\n      userType,\n      mobileNo: `${mobileNo}`,\n      location,\n      companySoleTraderDetail: { ...valToSend },\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    // console.log(dataToSend);\n\n    // return;\n\n    Utils.API.putApiCall(\n      Utils.endpoint.profileComplete,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n          localStorage.clear();\n          history.push(Utils.Pathname.Dashboard);\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const CompanyProfileComplete = (\n  values: { [key: string]: any },\n  history: any\n) => {\n  return (dispatch: Function, getState: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    const { userType, mobileNo, companyDetail } =\n      getState().profileSelectorReducer;\n\n    let location = values.location;\n    let valToSend = { ...values };\n    delete valToSend.location;\n    valToSend.availableTrades = valToSend.skills.map((val: any) => val.TYPE);\n    delete valToSend.skills;\n\n    let dataToSend = {\n      userType,\n      mobileNo: `${mobileNo}`,\n      location,\n      companyDetail: { ...valToSend, ...companyDetail },\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    console.log(dataToSend);\n\n    Utils.API.putApiCall(\n      Utils.endpoint.profileComplete,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n          localStorage.clear();\n          history.push(Utils.Pathname.Dashboard);\n          \n\n          Utils.showAlert(1, data.message);\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\n// export const addSoleTrader = () => {\n//   return (dispatch: Function) => {\n//     if (!navigator.onLine) {\n//       //check if user is online or not\n//       // Utils.showAlert(2, 'Please check your internet connection!');\n//       dispatch({\n//         type: Utils.ActionName.LOADING,\n//         payload: false,\n//       });\n//       return;\n//     }\n\n//     let dataToSend = {\n//       email: localStorage.getItem(\"user_email\") || \"\",\n//       type: 1,\n//       deviceId: \"string\",\n//       deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n//     };\n\n//     Utils.API.postApiCall(\n//       Utils.endpoint.resendLink,\n//       dataToSend,\n//       (respData: any) => {\n//         let { data } = respData;\n\n//         if (data.statusCode === Utils.Constants.api_success_code.success) {\n//           dispatch({\n//             type: Utils.ActionName.LOADING,\n//             payload: false,\n//           });\n\n//           // Utils.showAlert(1, \"Successfully logged in!\");\n//         } else {\n//           dispatch({\n//             type: Utils.ActionName.LOADING,\n//             payload: false,\n//           });\n//         }\n//       },\n//       (error: any) => {\n//         let { data } = error;\n//         // console.log(data);\n//         // Utils.showAlert(2, data.message);\n//         dispatch({\n//           type: Utils.ActionName.LOADING,\n//           payload: false,\n//         });\n//       }\n//     );\n//   };\n// };\n","import React from \"react\";\nimport ImageContainer from \"../../components/ImageContainer\";\nimport Schema from \"../../schema\";\nimport InputField from \"../../components/inputfield\";\n// import { Checkbox } from \"@mui/material\";\nimport Utils from \"../../Utils\";\n\nimport {\n  // HeadingText,\n  ActiveButton,\n  // InnerMainDiv,\n  // SmallText,\n} from \"../../components/styledComponents/auth/signIn\";\n// import ActiveButton from \"../../components/button\";\n\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useStyles } from \"./style\";\nimport { useTheme } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { InputAdornment } from \"@mui/material\";\nimport { Checkbox } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik, Form } from \"formik\";\nimport { FormControlLabel } from \"@mui/material\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport LocalImages from \"../../Utils/images\";\nimport { signUp } from \"./actions\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = () => {\n  const theme = useTheme();\n  const classes = useStyles({ theme });\n  const [isPasswordVisible, setPasswordVisible] = useState<boolean>(false);\n  const { collectClass } = Utils.CommonFunctions;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return (\n    <>\n      <HelmetProvider>\n        <div className={classes.loginContainer}>\n        <div>\n            <Typography sx={{ ml: \"90%\", fontWeight: \"500\", color: \"#BDBDBD\" }}>\n              01/04\n            </Typography>\n            <div className={classes.details}>\n            <Typography sx={{ fontWeight: \"600\", color: \"#828282\"}}>\n              Account Info\n            </Typography>\n            </div>\n          </div>\n          <Box className={classes.titleContainer}>\n            <ImageContainer\n              style={classes.brandLogo}\n              imgUrl={LocalImages.Logo}\n            />\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"30px\",\n                  fontWeight: \"bold\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#4f4f4f\",\n                  float: \"left\",\n                  marginTop: \"4%\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"20px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Create an account\n              </Typography>\n            </div>\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"15px\",\n                  // fontWeight: \"bold\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#687173\",\n                  float: \"left\",\n                  marginTop: \"2% !important\",\n                  marginBottom: \"8% !important\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"12px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Sign up with your email address to get started.\n              </Typography>\n            </div>\n          </Box>\n          <Formik\n            initialValues={{\n              name: \"\",\n              email: \"\",\n              password: \"\",\n              checked: false,\n            }}\n            validationSchema={Schema.SignupSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              dispatch(signUp(values, setSubmitting, history));\n              // console.log(values);\n            }}\n          >\n            <Form autoComplete=\"new\">\n              <div className={classes.lables}>\n                <Typography>YOUR FULL NAME*</Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  placeholder=\"Enter your name\"\n                  name=\"name\"\n                  type={\"text\"}\n                />\n              </div>\n              <div className={classes.lables}>\n                <Typography>EMAIL ADDRESS*</Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  placeholder=\"Enter email address\"\n                  name=\"email\"\n                  type={\"text\"}\n                />\n              </div>\n              <div className={classes.lables}>\n                <Typography>PASSWORD*</Typography>\n                <Typography className={classes.lables}></Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  className={collectClass([classes.endIconContainer])}\n                  placeholder=\"Enter your password\"\n                  name=\"password\"\n                  type={!isPasswordVisible ? \"password\" : \"text\"}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <Typography\n                          component={\"span\"}\n                          onClick={() => setPasswordVisible(!isPasswordVisible)}\n                        >\n                          {isPasswordVisible ? \"Hide\" : \"Show\"}\n                        </Typography>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </div>\n              <div className={classes.checkBoxContainer}>\n                <FormControlLabel\n                  control={\n                    <Checkbox name=\"checked\" className={classes.ckBox} />\n                  }\n                  label={\n                    <React.Fragment>\n                      <div\n                        style={{\n                          textAlign: \"left\",\n                          fontSize: 14,\n                          marginTop: \"1px\",\n                        }}\n                      >\n                        I agree to terms & conditions.\n                      </div>\n                    </React.Fragment>\n                  }\n                  className={classes.checkBox}\n                  sx={{\n                    background: \" #FFFFFF\",\n                    marginTop: \"0px\",\n                    color: theme.palette.secondary.light,\n                  }}\n                />\n              </div>\n\n              <ActiveButton\n                className={classes.activeButton}\n                sx={{ color: \"#fff\", textDecoration: \"none\", textTransform:\"capitalize\" }}\n                variant=\"contained\"\n                type={\"submit\"}\n                onClick={() => history.push(Utils.Pathname.VERIFY)}\n              >\n                <Typography className={classes.lables}>\n                  Register Account\n                </Typography>\n              </ActiveButton>\n\n              <Typography\n                className={classes.dontHaveAccount}\n                sx={{ color: \"#686c6e\", marginTop: \"5%\" }}\n              >\n                Already have an account?\n                <b>\n                  <Link to={Utils.Pathname.LOGIN}> Login</Link>{\" \"}\n                </b>\n              </Typography>\n            </Form>\n          </Formik>\n        </div>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default Signup;\n","import { makeStyles } from \"@mui/styles\";\nimport { height } from \"@mui/system\";\n\nconst useStyles = makeStyles({\n  loginContainer: ({ theme }: any) => ({\n    width: \"90% !important\",\n    height: \"89% !important\",\n    marginTop: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(1024)]: {\n      padding: \"50px\",\n      justifyContent: \"center\",\n    },\n    // \"& >div\": {\n    //   [theme.breakpoints.down(1025)]: {\n    //     width: \"90% !important\",\n    //   },\n    // },\n  }),\n\n  details:({theme}:any)=> ({\n    width:\"50%\",\n    marginLeft:\"64.5%\",\n    [theme.breakpoints.down(1300)]: {\n      marginLeft:\"64\",\n    },\n  }),\n\n  stepper:() => ({\n    marginLeft:\"80%\",\n  }),\n\n  titleContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    alignItems: \"right\",\n  }),\n\n  brandLogo: ({ theme }: any) => ({\n    width: \"100%\",\n    \"& figure\": {\n      margin: 0,\n      width: \"140px\",\n      height: \"70px\",\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  checkBoxContainer: () => ({\n    float: \"left\",\n  }),\n\n  checkBox: () => ({\n    background: \" #FFFFFF\",\n    boxSizing: \"border-box\",\n    marginBottom: \"5px\",\n    \"&.css-rfs483-MuiFormControlLabel-root\": {\n      marginLeft: \"-26px\",\n      marginRight: \"0px\",\n      width: \"100%\",\n    },\n  }),\n\n  ckBox: () => ({\n    \"&.css-3zq233-MuiButtonBase-root-MuiCheckbox-root.Mui-checked\": {\n      color: \"#000\",\n    },\n  }),\n\n  endIconContainer: () => ({\n    backgroundColor: \"#0da4ce\",\n  }),\n\n  title: ({ theme }: any) => ({\n    width: \"100%\",\n  }),\n\n  verifyTitle: ({ theme }: any) => ({\n    border: \"1 px solid black\",\n  }),\n  resendMail: () => ({\n    \"&:hover\": {\n      background: \"none\",\n    },\n  }),\n\n  lables: ({ theme }: any) => ({\n    float: \"left\",\n    marginTop: \"1.5%\",\n    marginBottom: \"1.5%\",\n  }),\n\n  forgotPassword: () => ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"3%\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n\n  profileSelector: () => ({\n    border: \"2px solid grey\",\n    width: \"43%\",\n    cursor: \"pointer\",\n  }),\n\n  inputField: () => ({\n    \n    marginBottom: \"1%\",\n    \"& input::-webkit-outer-spin-button\": {\n      WebkitAppearance: \"none\",\n      margin: 0,\n    },\n    \"& input::-webkit-inner-spin-button\": {\n      webkitAppearance: \"none\",\n      margin: 0,\n    },\n  }),\n\n  textfieldClass: () => ({\n  }),\n\n  selectProfile: ({ theme }: any) => ({\n    display: \"flex\",\n    height: \"100px\",\n    width: \"100%\",\n    marginRight: \"20%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"& figure\": {\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  normalButton: () => ({\n    marginTop: \"5%\",\n    width: \"100%\",\n  }),\n\n  activeButton: () => ({\n    color: \"#ffffff\",\n    backgroundColor: \"#0da4ce\",\n    maxHeight: \"40px\",\n  }),\n\n  formCommon: () => ({\n    alignItems: \"flex-start\",\n  }),\n  buttonContainer: () => ({\n    marginTop: \"5%\",\n    // marginRight: \"22%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  }),\n  dontHaveAccount: () => ({\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n  tools: () => ({\n    display: \"flex\",\n    width: \"100%\",\n  }),\n});\n\nexport { useStyles };\n"],"names":["name","rest","useField","field","meta","attributes","fullWidth","variant","value","touched","error","helperText","size","sx","borderColor","border","boxShadow","borderRadius","phoneRegExp","Schema","LoginSchema","Yup","shape","email","trim","max","required","password","SignupSchema","checked","ChangePasswordScheema","currentpassword","newpassword","min","test","this","parent","CompanyContactSchema","mobileNo","matches","officeNo","MobileNumber","PhoneNumber","BusinessDetailSchema","phone_number","location","SoleTraderSchema","businessName","abnNumber","address","coordinates","skills","industryExp","ForgotPassWordSchema","ResetPasswordSchema","newPassword","confirmPassword","signUp","values","setSubmitting","history","dispatch","navigator","onLine","dataToSend","deviceId","Utils","respData","data","statusCode","accessToken","userId","localStorage","setItem","push","type","payload","message","console","log","resendMail","getItem","deviceToken","getSkills","verifyAccount","token","soleTraderProfileComplete","getState","profileSelectorReducer","userType","valToSend","map","val","TYPE","companySoleTraderDetail","clear","CompanyProfileComplete","companyDetail","availableTrades","theme","useTheme","classes","useStyles","useState","isPasswordVisible","setPasswordVisible","collectClass","useDispatch","useHistory","className","loginContainer","ml","fontWeight","color","details","titleContainer","style","brandLogo","imgUrl","LocalImages","title","fontSize","fontStretch","lineHeight","letterSpacing","float","marginTop","breakpoints","down","marginLeft","marginBottom","initialValues","validationSchema","onSubmit","autoComplete","lables","inputField","placeholder","endIconContainer","InputProps","endAdornment","position","component","onClick","checkBoxContainer","control","ckBox","label","textAlign","checkBox","background","palette","secondary","light","activeButton","textDecoration","textTransform","dontHaveAccount","to","makeStyles","width","height","display","flexDirection","justifyContent","padding","stepper","alignItems","margin","up","boxSizing","marginRight","backgroundColor","verifyTitle","forgotPassword","profileSelector","cursor","WebkitAppearance","webkitAppearance","textfieldClass","selectProfile","normalButton","maxHeight","formCommon","buttonContainer","tools"],"sourceRoot":""}