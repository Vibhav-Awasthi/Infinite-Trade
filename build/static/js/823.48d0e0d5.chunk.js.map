{"version":3,"file":"static/js/823.48d0e0d5.chunk.js","mappings":"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","sources":["components/button/NormalButton.tsx","components/inputfield/index.tsx","components/button/index.tsx","components/styledComponents/auth/signIn.ts","schema/index.ts","screen/signup/actions.ts","screen/signup/index.tsx","screen/signup/style.tsx"],"sourcesContent":["import React from \"react\";\nimport { Button, ButtonProps } from \"@mui/material\";\n\nexport default function NormalButton({ children, ...rest }: ButtonProps) {\n  const attributes: ButtonProps = {\n      ...rest,\n      fullWidth:true,\n  };\n  return <Button sx={{padding:\"20px 0px\"}} {...attributes}>{children}</Button>;\n}\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport { TextField, TextFieldProps } from \"@mui/material\";\n\n\nconst InputField = ({ name, ...rest }: TextFieldProps) => {\n  const [field, meta] = useField(name as string);\n\n  // console.log(name,meta);\n\n  const attributes: TextFieldProps = {\n    ...rest,\n    ...field,\n    fullWidth: true,\n    variant: \"outlined\",\n    value: field.value || \"\",\n    // autoComplete: \"off\"\n  };\n\n  if (meta && meta.touched && meta.error) {\n    attributes.error = true;\n    attributes.helperText = meta.error;\n  }\n\n  return (\n    <div>\n      <TextField\n        size=\"small\"\n        sx={{\n          \n          \"& label.Mui-focused\": {\n            borderColor: \"#424546\",\n          },\n          \"& .MuiInput-underline:after\": {\n            border: \"1px solid #424546\",\n          },\n          \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n              border: \"1px solid #424546\",\n            },\n            \"&:hover fieldset\": {\n              border: \"1px solid #424546\",\n            },\n            \"&.Mui-focused fieldset\": {\n              boxShadow: \"-2px 0px 23px -2px rgba(0,0,0,0.33)\",\n              // -webkit-box-shadow: -2px 0px 23px -2px rgba(0,0,0,0.33);\n              // -moz-box-shadow: -2px 0px 23px -2px rgba(0,0,0,0.33);\n            },\n          },\n          [`& fieldset`]: {\n            borderRadius: 0,\n          },\n        }}\n        {...attributes}\n      />\n    </div>\n  );\n};\n\nexport default InputField;\n","import React from \"react\";\nimport { Button, ButtonProps } from \"@mui/material\";\nimport { useFormikContext } from \"formik\";\n\nconst ActionButton = ({ children, ...rest }: ButtonProps) => {\n  const { submitForm } = useFormikContext();\n  const handleSubmit = () => {\n    submitForm();\n  };\n  const attributes: ButtonProps = {\n    ...rest,\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n  return <Button {...attributes}>{children}</Button>;\n};\n\nexport default ActionButton;","import { styled } from \"@mui/system\";\nimport ActionButton from \"../../button\";\nimport NormalButton from \"../../button/NormalButton\";\n\nexport const InnerMainDiv = styled(\"div\")({\n  backgroundColor: \"#fff\",\n  width: \"50%\",\n});\n\nexport const ActiveButton = styled(ActionButton)({\n    width: \"100%\",\n    height: \"54px\",\n    marginTop: \"20px\",\n    borderRadius:\"0 !important\",\n  });\n\n  export const CommonButton =styled(NormalButton)({\n    width: \"100%\",\n    height: \"54px\",\n    marginTop: \"20px\",\n    borderRadius:\"0 !important\",\n  });\n\nexport const HeadingText = styled(\"span\")({\n    // width:\"100%\",\n  fontSize: \"30px\",\n  fontWeight: \"bold\",\n  fontStretch: \"normal\",\n  lineHeight: \"normal\",\n  letterSpacing: \"normal\",\n  color: \"#4f4f4f\",\n});\n\nexport const SmallText = styled(\"span\")({\n  fontSize: \"16px\",\n  fontStretch: \"normal\",\n  lineHeight: \"1.5\",\n  color: \"#828282\",\n  margin: \"4px 0 42px 0\",\n});","import * as Yup from \"yup\";\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst LoginSchema = () => {\n  return Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter valid email\")\n      .max(50, \"Email can be maximum of hundred characters\")\n      .required(\"Email field cannot be blank\"),\n    password: Yup.string().trim().required(\"Password field cannot be blank\"),\n  });\n};\nconst MobileNumber = () => {\n  return Yup.object().shape({\n    PhoneNumber: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n  });\n};\nconst SignupSchema = () => {\n  return Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .max(100, \"Name can be maximum of hundred characters\")\n\n      .required(\"Name field cannot be blank\"),\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter valid email\")\n      .max(100, \"Email can be maximum of hundred characters\")\n\n      .required(\"Email field cannot be blank\"),\n    password: Yup.string().trim().required(\"Password field cannot be blank\"),\n    checked: Yup.boolean().required(\"Please Mark this box\"),\n  });\n};\nconst ChangePasswordScheema = () => {\n  return Yup.object().shape({\n    currentpassword: Yup.string()\n      .trim()\n      .required(\"Current Password field cannot be blank\"),\n    newpassword: Yup.string()\n      .trim()\n      .min(6, \"Password should be minimum of six characters\")\n      .max(20, \"Password should be maximum of twenty characters\")\n\n      .required(\"New Password field cannot be blank\")\n      .test(\n        \"notBothAtTheSameTime\",\n        \"Current Password and New Password should not be the same\",\n        function (newpassword) {\n          const { currentpassword } = this.parent;\n          if (currentpassword === newpassword) {\n            return false;\n          }\n          return true;\n        }\n      ),\n  });\n};\n\nconst CompanyContactSchema = () => {\n  return Yup.object().shape({\n    PhoneNumber: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n    OfficeNumber: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n  });\n};\n\nconst BusinessDetailSchema = () => {\n  return Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .max(100, \"Name can be maximum of hundred characters\")\n\n      .required(\"Name field cannot be blank\"),\n    phone_number: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"Phone number cannot be less than 10 digits\"),\n    location: Yup.object().required(\"Please enter the location\"),\n\n    checked: Yup.boolean().required(\"Please Mark this box\"),\n  });\n};\n\nconst SoleTraderSchema = () =>\n  Yup.object().shape({\n    businessName: Yup.string().trim().required(\"Required\"),\n    abnNumber: Yup.string()\n      .trim()\n      .max(10, \"Maximum limit is 10 digits\")\n      .required(\"Required\"),\n    location: Yup.object()\n      .shape({\n        address: Yup.string(),\n        coordinates: Yup.array(),\n      })\n      .required(\"Location Required\"),\n    skills: Yup.array().min(1, \"Required\"),\n    industryExp: Yup.number()\n      .max(20, \"Cannot exceed 20 years of Experience\")\n      .required(\"Required\"),\n  });\n\nconst ForgotPassWordSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter a valid email\")\n      .required(\"Email required\"),\n  });\n\nconst ResetPasswordSchema = () =>\n  Yup.object().shape({\n    newPassword: Yup.string().trim().required(\"Password filed is required\"),\n    confirmPassword: Yup.string()\n      .trim()\n      .required(\"Password field is required\")\n      .test(\n        \"check confirmPassword\",\n        \"Password does not match\",\n        function (value: any) {\n          const { newPassword } = this.parent;\n          return value === newPassword;\n        }\n      ),\n  });\n\nconst Schema = {\n  LoginSchema,\n  SignupSchema,\n  ChangePasswordScheema,\n  CompanyContactSchema,\n  MobileNumber,\n  BusinessDetailSchema,\n  SoleTraderSchema,\n  ForgotPassWordSchema,\n  ResetPasswordSchema,\n};\n\nexport default Schema;\n","import { ResetPasswordModel } from \"../../model\";\nimport Utils from \"../../Utils\";\n\nexport const signUp = (values: any, setSubmitting: any, history: any) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n    let dataToSend = {\n      ...values,\n      deviceId: \"string\",\n    };\n\n    delete dataToSend.checked;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.signUp,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          const { accessToken, email, name, userId } = data.data;\n\n          localStorage.setItem(\"verify_account_token\", accessToken);\n          localStorage.setItem(\"user_email\", email);\n          localStorage.setItem(\"user_name\", name);\n          localStorage.setItem(\"user_id\", userId);\n\n          history.push(Utils.Pathname.VERIFY);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          setSubmitting(false);\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          setSubmitting(false);\n          // Utils.showAlert(2, data.message);\n          // dispatch({\n          //   type: Utils.ActionName.SIGNUP,\n          //   payload: {\n          //     username: \"\",\n          //     password: \"\",\n          //     accountError: data.message,\n          //   },\n          // });\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        setSubmitting(false);\n        let { data } = error;\n        console.log(data);\n        // Utils.showAlert(2, data.message);\n        // dispatch({\n        //   type: Utils.ActionName.SIGNUP,\n        //   payload: {\n        //     username: \"\",\n        //     password: \"\",\n        //     accountError: data.messa ge,\n        //   },\n        // });\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const resendMail = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      email: localStorage.getItem(\"user_email\") || \"\",\n      type: 1,\n      deviceId: \"string\",\n      deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n    };\n\n    Utils.API.postApiCall(\n      Utils.endpoint.resendLink,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const getSkills = () => {\n  return (dispatch: any) => {\n    Utils.API.getApiCall(\n      Utils.endpoint.skills,\n      ``,\n      (respData: any) => {\n        let { data } = respData;\n        if (data.statusCode === 200) {\n          console.log(data);\n          dispatch({\n            type: Utils.ActionName.SKILLS,\n            payload: {\n              skills: [...data.data.skills],\n            },\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n      }\n    );\n  };\n};\n\nexport const verifyAccount = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      token: localStorage.getItem(\"verify_account_token\") || \"\",\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.verify,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          console.log(data);\n          localStorage.setItem(\"accessToken\", data.data.accessToken);\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const soleTraderProfileComplete = (\n  values: { [key: string]: any },\n  history: any\n) => {\n  return (dispatch: Function, getState: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    const { userType, mobileNo } = getState().profileSelectorReducer;\n\n    let location = values.location;\n    let valToSend = { ...values };\n    delete valToSend.location;\n    valToSend.skills = valToSend.skills.map((val: any) => val.TYPE);\n\n    let dataToSend = {\n      userType,\n      mobileNo: `${mobileNo}`,\n      location,\n      companySoleTraderDetail: { ...valToSend },\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    // console.log(dataToSend);\n\n    // return;\n\n    Utils.API.putApiCall(\n      Utils.endpoint.profileComplete,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n          history.push(Utils.Pathname.Dashboard) \n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\n// export const addSoleTrader = () => {\n//   return (dispatch: Function) => {\n//     if (!navigator.onLine) {\n//       //check if user is online or not\n//       // Utils.showAlert(2, 'Please check your internet connection!');\n//       dispatch({\n//         type: Utils.ActionName.LOADING,\n//         payload: false,\n//       });\n//       return;\n//     }\n\n//     let dataToSend = {\n//       email: localStorage.getItem(\"user_email\") || \"\",\n//       type: 1,\n//       deviceId: \"string\",\n//       deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n//     };\n\n//     Utils.API.postApiCall(\n//       Utils.endpoint.resendLink,\n//       dataToSend,\n//       (respData: any) => {\n//         let { data } = respData;\n\n//         if (data.statusCode === Utils.Constants.api_success_code.success) {\n//           dispatch({\n//             type: Utils.ActionName.LOADING,\n//             payload: false,\n//           });\n\n//           // Utils.showAlert(1, \"Successfully logged in!\");\n//         } else {\n//           dispatch({\n//             type: Utils.ActionName.LOADING,\n//             payload: false,\n//           });\n//         }\n//       },\n//       (error: any) => {\n//         let { data } = error;\n//         // console.log(data);\n//         // Utils.showAlert(2, data.message);\n//         dispatch({\n//           type: Utils.ActionName.LOADING,\n//           payload: false,\n//         });\n//       }\n//     );\n//   };\n// };\n","import React from \"react\";\nimport ImageContainer from \"../../components/ImageContainer\";\nimport Schema from \"../../schema\";\nimport InputField from \"../../components/inputfield\";\n// import { Checkbox } from \"@mui/material\";\nimport Utils from \"../../Utils\";\n\nimport {\n  // HeadingText,\n  ActiveButton,\n  // InnerMainDiv,\n  // SmallText,\n} from \"../../components/styledComponents/auth/signIn\";\n// import ActiveButton from \"../../components/button\";\n\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useStyles } from \"./style\";\nimport { useTheme } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { InputAdornment } from \"@mui/material\";\nimport { Checkbox } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik, Form } from \"formik\";\nimport { FormControlLabel } from \"@mui/material\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport LocalImages from \"../../Utils/images\";\nimport { signUp } from \"./actions\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = () => {\n  const theme = useTheme();\n  const classes = useStyles({ theme });\n  const [isPasswordVisible, setPasswordVisible] = useState<boolean>(false);\n  const { collectClass } = Utils.CommonFunctions;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return (\n    <>\n      <HelmetProvider>\n        <div className={classes.loginContainer}>\n          <Box className={classes.titleContainer}>\n            <ImageContainer\n              style={classes.brandLogo}\n              imgUrl={LocalImages.Logo}\n            />\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"30px\",\n                  fontWeight: \"bold\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#4f4f4f\",\n                  float: \"left\",\n                  marginTop: \"4%\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"20px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Create an account\n              </Typography>\n            </div>\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"15px\",\n                  // fontWeight: \"bold\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#687173\",\n                  float: \"left\",\n                  marginTop: \"2% !important\",\n                  marginBottom: \"8% !important\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"12px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Sign up with your email address to get started.\n              </Typography>\n            </div>\n          </Box>\n          <Formik\n            initialValues={{\n              name: \"\",\n              email: \"\",\n              password: \"\",\n              checked: false,\n            }}\n            validationSchema={Schema.SignupSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              dispatch(signUp(values, setSubmitting, history));\n              // console.log(values);\n            }}\n          >\n            <Form autoComplete=\"new\">\n              <div className={classes.lables}>\n                <Typography>Name*</Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  placeholder=\"Enter your name\"\n                  name=\"name\"\n                  type={\"text\"}\n                />\n              </div>\n              <div className={classes.lables}>\n                <Typography>EMAIL ADDRESS*</Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  placeholder=\"Enter Email Address\"\n                  name=\"email\"\n                  type={\"text\"}\n                />\n              </div>\n              <div className={classes.lables}>\n                <Typography>PASSWORD*</Typography>\n                <Typography className={classes.lables}></Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  className={collectClass([classes.endIconContainer])}\n                  placeholder=\"Enter Your Password\"\n                  name=\"password\"\n                  type={!isPasswordVisible ? \"password\" : \"text\"}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <Typography\n                          component={\"span\"}\n                          onClick={() => setPasswordVisible(!isPasswordVisible)}\n                        >\n                          {isPasswordVisible ? \"Hide\" : \"Show\"}\n                        </Typography>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </div>\n              <div className={classes.checkBoxContainer}>\n                <FormControlLabel\n                  control={\n                    <Checkbox name=\"checked\" className={classes.ckBox} />\n                  }\n                  label={\n                    <React.Fragment>\n                      <div\n                        style={{\n                          textAlign: \"left\",\n                          fontSize: 14,\n                          marginTop: \"3px\",\n                        }}\n                      >\n                        I agree to terms and conditions.\n                      </div>\n                    </React.Fragment>\n                  }\n                  className={classes.checkBox}\n                  sx={{\n                    background: \" #FFFFFF\",\n                    marginTop: \"0px\",\n                    color: theme.palette.secondary.light,\n                  }}\n                />\n              </div>\n\n              <ActiveButton\n                className={classes.activeButton}\n                sx={{ color: \"#fff\", textDecoration: \"none\" }}\n                variant=\"contained\"\n                type={\"submit\"}\n                onClick={() => history.push(Utils.Pathname.VERIFY)}\n              >\n                <Typography className={classes.lables}>\n                  Register Account\n                </Typography>\n              </ActiveButton>\n\n              <Typography\n                className={classes.dontHaveAccount}\n                sx={{ color: \"#686c6e\", marginTop: \"5%\" }}\n              >\n                Already have an account?\n                <b>\n                  <Link to={Utils.Pathname.LOGIN}> Login</Link>{\" \"}\n                </b>\n              </Typography>\n            </Form>\n          </Formik>\n        </div>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default Signup;\n","import { makeStyles } from \"@mui/styles\";\nimport { height } from \"@mui/system\";\n\nconst useStyles = makeStyles({\n  loginContainer: ({ theme }: any) => ({\n    width: \"90% !important\",\n    height: \"89% !important\",\n    marginTop: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(1024)]: {\n      padding: \"50px\",\n      justifyContent: \"center\",\n    },\n    // \"& >div\": {\n    //   [theme.breakpoints.down(1025)]: {\n    //     width: \"90% !important\",\n    //   },\n    // },\n  }),\n\n  stepper:() => ({\n    marginLeft:\"80%\",\n  }),\n\n  titleContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    alignItems: \"right\",\n  }),\n\n  brandLogo: ({ theme }: any) => ({\n    width: \"100%\",\n    \"& figure\": {\n      margin: 0,\n      width: \"140px\",\n      height: \"70px\",\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  checkBoxContainer: () => ({\n    float: \"left\",\n  }),\n\n  checkBox: () => ({\n    background: \" #FFFFFF\",\n    boxSizing: \"border-box\",\n    marginBottom: \"5px\",\n    \"&.css-rfs483-MuiFormControlLabel-root\": {\n      marginLeft: \"-26px\",\n      marginRight: \"0px\",\n      width: \"100%\",\n    },\n  }),\n\n  ckBox: () => ({\n    \"&.css-3zq233-MuiButtonBase-root-MuiCheckbox-root.Mui-checked\": {\n      color: \"#000\",\n    },\n  }),\n\n  endIconContainer: () => ({\n    backgroundColor: \"#0da4ce\",\n  }),\n\n  title: ({ theme }: any) => ({\n    width: \"100%\",\n\n    // margin: \"30px 160px 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n\n  verifyTitle: ({ theme }: any) => ({\n    border: \"1 px solid black\",\n    // width:\"43% !important\",\n  }),\n  resendMail: () => ({\n    \"&:hover\": {\n      background: \"none\",\n    },\n  }),\n\n  lables: ({ theme }: any) => ({\n    float: \"left\",\n    marginTop: \"1.5%\",\n    marginBottom: \"1.5%\",\n    // margin: \"25px 0 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n\n  forgotPassword: () => ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"3%\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n\n  profileSelector: () => ({\n    border: \"2px solid grey\",\n    width: \"43%\",\n    cursor: \"pointer\",\n  }),\n\n  inputField: () => ({\n    \n    marginBottom: \"1%\",\n    \"& input::-webkit-outer-spin-button\": {\n      WebkitAppearance: \"none\",\n      margin: 0,\n    },\n    \"& input::-webkit-inner-spin-button\": {\n      webkitAppearance: \"none\",\n      margin: 0,\n    },\n    // \"& input[type=number]\": {\n    //   MozAppearance: \"textfield\",\n    // },\n  }),\n\n  textfieldClass: () => ({\n  }),\n\n  selectProfile: ({ theme }: any) => ({\n    display: \"flex\",\n    height: \"100px\",\n    width: \"100%\",\n    marginRight: \"20%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"& figure\": {\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  normalButton: () => ({\n    marginTop: \"5%\",\n    width: \"100%\",\n  }),\n\n  activeButton: () => ({\n    color: \"#ffffff\",\n    backgroundColor: \"#0da4ce\",\n    maxHeight: \"40px\",\n  }),\n\n  formCommon: () => ({\n    alignItems: \"flex-start\",\n  }),\n  buttonContainer: () => ({\n    marginTop: \"5%\",\n    // marginRight: \"22%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  }),\n  dontHaveAccount: () => ({\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n  tools: () => ({\n    display: \"flex\",\n    width: \"100%\",\n  }),\n});\n\nexport { useStyles };\n"],"names":["NormalButton","children","rest","attributes","fullWidth","sx","padding","name","useField","field","meta","variant","value","touched","error","helperText","size","borderColor","border","boxShadow","borderRadius","submitForm","useFormikContext","onClick","Button","ActiveButton","styled","backgroundColor","width","ActionButton","height","marginTop","CommonButton","fontSize","fontWeight","fontStretch","lineHeight","letterSpacing","color","margin","phoneRegExp","Schema","LoginSchema","Yup","shape","email","trim","max","required","password","SignupSchema","checked","ChangePasswordScheema","currentpassword","newpassword","min","test","this","parent","CompanyContactSchema","PhoneNumber","matches","OfficeNumber","MobileNumber","BusinessDetailSchema","phone_number","location","SoleTraderSchema","businessName","abnNumber","address","coordinates","skills","industryExp","ForgotPassWordSchema","ResetPasswordSchema","newPassword","confirmPassword","signUp","values","setSubmitting","history","dispatch","navigator","onLine","dataToSend","deviceId","Utils","respData","data","statusCode","accessToken","userId","localStorage","setItem","push","type","payload","console","log","resendMail","getItem","deviceToken","getSkills","verifyAccount","token","soleTraderProfileComplete","getState","profileSelectorReducer","userType","mobileNo","valToSend","map","val","TYPE","companySoleTraderDetail","theme","useTheme","classes","useStyles","useState","isPasswordVisible","setPasswordVisible","collectClass","useDispatch","useHistory","className","loginContainer","titleContainer","style","brandLogo","imgUrl","LocalImages","title","float","breakpoints","down","marginLeft","marginBottom","initialValues","validationSchema","onSubmit","autoComplete","lables","inputField","placeholder","endIconContainer","InputProps","endAdornment","position","component","checkBoxContainer","control","ckBox","label","textAlign","checkBox","background","palette","secondary","light","activeButton","textDecoration","dontHaveAccount","to","makeStyles","display","flexDirection","justifyContent","stepper","alignItems","up","boxSizing","marginRight","verifyTitle","forgotPassword","profileSelector","cursor","WebkitAppearance","webkitAppearance","textfieldClass","selectProfile","normalButton","maxHeight","formCommon","buttonContainer","tools"],"sourceRoot":""}