{"version":3,"file":"static/js/492.8ace6ac2.chunk.js","mappings":"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","sources":["components/button/NormalButton.tsx","components/button/index.tsx","components/styledComponents/auth/signIn.ts","screen/signup/actions.ts","screen/signup/style.tsx","screen/signup/verify.tsx"],"sourcesContent":["import React from \"react\";\nimport { Button, ButtonProps } from \"@mui/material\";\n\nexport default function NormalButton({ children, ...rest }: ButtonProps) {\n  const attributes: ButtonProps = {\n      ...rest,\n      fullWidth:true,\n  };\n  return <Button sx={{padding:\"20px 0px\"}} {...attributes}>{children}</Button>;\n}\n","import React from \"react\";\nimport { Button, ButtonProps } from \"@mui/material\";\nimport { useFormikContext } from \"formik\";\n\nconst ActionButton = ({ children, ...rest }: ButtonProps) => {\n  const { submitForm } = useFormikContext();\n  const handleSubmit = () => {\n    submitForm();\n  };\n  const attributes: ButtonProps = {\n    ...rest,\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n  return <Button {...attributes}>{children}</Button>;\n};\n\nexport default ActionButton;","import { styled } from \"@mui/system\";\nimport ActionButton from \"../../button\";\nimport NormalButton from \"../../button/NormalButton\";\n\nexport const InnerMainDiv = styled(\"div\")({\n  backgroundColor: \"#fff\",\n  width: \"50%\",\n});\n\nexport const ActiveButton = styled(ActionButton)({\n    width: \"100%\",\n    height: \"54px\",\n    marginTop: \"20px\",\n    borderRadius:\"0 !important\",\n  });\n\n  export const CommonButton =styled(NormalButton)({\n    width: \"100%\",\n    height: \"54px\",\n    marginTop: \"20px\",\n    borderRadius:\"0 !important\",\n  });\n\nexport const HeadingText = styled(\"span\")({\n    // width:\"100%\",\n  fontSize: \"30px\",\n  fontWeight: \"bold\",\n  fontStretch: \"normal\",\n  lineHeight: \"normal\",\n  letterSpacing: \"normal\",\n  color: \"#4f4f4f\",\n});\n\nexport const SmallText = styled(\"span\")({\n  fontSize: \"16px\",\n  fontStretch: \"normal\",\n  lineHeight: \"1.5\",\n  color: \"#828282\",\n  margin: \"4px 0 42px 0\",\n});","import { ResetPasswordModel } from \"../../model\";\nimport Utils from \"../../Utils\";\n\nexport const signUp = (values: any, setSubmitting: any, history: any) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n    let dataToSend = {\n      ...values,\n      deviceId: \"string\",\n    };\n\n    delete dataToSend.checked;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.signUp,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          const { accessToken, email, name, userId } = data.data;\n\n          localStorage.setItem(\"verify_account_token\", accessToken);\n          localStorage.setItem(\"user_email\", email);\n          localStorage.setItem(\"user_name\", name);\n          localStorage.setItem(\"user_id\", userId);\n\n          history.push(Utils.Pathname.VERIFY);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          setSubmitting(false);\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          setSubmitting(false);\n          // Utils.showAlert(2, data.message);\n          // dispatch({\n          //   type: Utils.ActionName.SIGNUP,\n          //   payload: {\n          //     username: \"\",\n          //     password: \"\",\n          //     accountError: data.message,\n          //   },\n          // });\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        setSubmitting(false);\n        let { data } = error;\n        console.log(data);\n        // Utils.showAlert(2, data.message);\n        // dispatch({\n        //   type: Utils.ActionName.SIGNUP,\n        //   payload: {\n        //     username: \"\",\n        //     password: \"\",\n        //     accountError: data.messa ge,\n        //   },\n        // });\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const resendMail = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      email: localStorage.getItem(\"user_email\") || \"\",\n      type: 1,\n      deviceId: \"string\",\n      deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n    };\n\n    Utils.API.postApiCall(\n      Utils.endpoint.resendLink,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const getSkills = () => {\n  return (dispatch: any) => {\n    Utils.API.getApiCall(\n      Utils.endpoint.skills,\n      ``,\n      (respData: any) => {\n        let { data } = respData;\n        if (data.statusCode === 200) {\n          console.log(data);\n          dispatch({\n            type: Utils.ActionName.SKILLS,\n            payload: {\n              skills: [...data.data.skills],\n            },\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n      }\n    );\n  };\n};\n\nexport const soleTraderProfileComplete = (\n  values: { [key: string]: any },\n  history: any\n) => {\n  return (dispatch: Function, getState: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    const { userType, mobileNo } = getState().profileSelectorReducer;\n\n    let location = values.location;\n    let valToSend = { ...values };\n    delete valToSend.location;\n\n    let dataToSend = {\n      userType,\n      mobileNo,\n      location,\n      companySoleTraderDetail: { ...valToSend },\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n    };\n\n    console.log(dataToSend);\n\n    return;\n\n    Utils.API.putApiCall(\n      Utils.endpoint.profileComplete,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\n// export const addSoleTrader = () => {\n//   return (dispatch: Function) => {\n//     if (!navigator.onLine) {\n//       //check if user is online or not\n//       // Utils.showAlert(2, 'Please check your internet connection!');\n//       dispatch({\n//         type: Utils.ActionName.LOADING,\n//         payload: false,\n//       });\n//       return;\n//     }\n\n//     let dataToSend = {\n//       email: localStorage.getItem(\"user_email\") || \"\",\n//       type: 1,\n//       deviceId: \"string\",\n//       deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n//     };\n\n//     Utils.API.postApiCall(\n//       Utils.endpoint.resendLink,\n//       dataToSend,\n//       (respData: any) => {\n//         let { data } = respData;\n\n//         if (data.statusCode === Utils.Constants.api_success_code.success) {\n//           dispatch({\n//             type: Utils.ActionName.LOADING,\n//             payload: false,\n//           });\n\n//           // Utils.showAlert(1, \"Successfully logged in!\");\n//         } else {\n//           dispatch({\n//             type: Utils.ActionName.LOADING,\n//             payload: false,\n//           });\n//         }\n//       },\n//       (error: any) => {\n//         let { data } = error;\n//         // console.log(data);\n//         // Utils.showAlert(2, data.message);\n//         dispatch({\n//           type: Utils.ActionName.LOADING,\n//           payload: false,\n//         });\n//       }\n//     );\n//   };\n// };\n","import { makeStyles } from \"@mui/styles\";\nimport { height } from \"@mui/system\";\n\nconst useStyles = makeStyles({\n  loginContainer: ({ theme }: any) => ({\n    width: \"90% !important\",\n    height: \"89% !important\",\n    // marginLeft: \"8%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(1024)]: {\n      padding: \"50px\",\n      justifyContent: \"center\",\n    },\n    // \"& >div\": {\n    //   [theme.breakpoints.down(1025)]: {\n    //     width: \"90% !important\",\n    //   },\n    // },\n  }),\n\n  titleContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    alignItems: \"right\",\n  }),\n\n  brandLogo: ({ theme }: any) => ({\n    width: \"100%\",\n    \"& figure\": {\n      margin: 0,\n      width: \"140px\",\n      height: \"70px\",\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  checkBoxContainer: () => ({\n    float: \"left\",\n  }),\n\n  checkBox: () => ({\n    background: \" #FFFFFF\",\n    boxSizing: \"border-box\",\n    marginBottom: \"5px\",\n    \"&.css-rfs483-MuiFormControlLabel-root\": {\n      marginLeft: \"-26px\",\n      marginRight: \"0px\",\n      width: \"100%\",\n    },\n  }),\n\n  ckBox: () => ({\n    \"&.css-3zq233-MuiButtonBase-root-MuiCheckbox-root.Mui-checked\": {\n      color: \"#000\",\n    },\n  }),\n\n  endIconContainer: () => ({\n    backgroundColor: \"#0da4ce\",\n  }),\n\n  title: ({ theme }: any) => ({\n    width: \"100%\",\n\n    // margin: \"30px 160px 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n\n  verifyTitle: ({ theme }: any) => ({\n    border: \"1 px solid black\",\n    position: \"relative\",\n    right: \"11%\",\n    // width:\"43% !important\",\n    [theme.breakpoints.down(1025)]: {\n      position: \"relative\",\n      right: \"11%\",\n    },\n  }),\n  resendMail: () => ({\n    \"&:hover\": {\n      background: \"none\",\n    },\n  }),\n\n  lables: ({ theme }: any) => ({\n    float: \"left\",\n    marginTop: \"1.5%\",\n    marginBottom: \"1.5%\",\n    // margin: \"25px 0 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n\n  forgotPassword: () => ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"3%\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n\n  profileSelector: () => ({\n    border: \"2px solid grey\",\n    width: \"43%\",\n    cursor: \"pointer\",\n  }),\n\n  inputField: () => ({\n    marginBottom: \"1%\",\n    \"& input::-webkit-outer-spin-button\": {\n      WebkitAppearance: \"none\",\n      margin: 0,\n    },\n    \"& input::-webkit-inner-spin-button\": {\n      webkitAppearance: \"none\",\n      margin: 0,\n    },\n    // \"& input[type=number]\": {\n    //   MozAppearance: \"textfield\",\n    // },\n  }),\n\n  textfieldClass: () => ({\n   \n  }),\n\n  selectProfile: ({ theme }: any) => ({\n    display: \"flex\",\n    height: \"100px\",\n    width: \"100%\",\n    marginRight: \"20%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"& figure\": {\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  normalButton: () => ({\n    marginTop: \"5%\",\n    width: \"100%\",\n  }),\n\n  activeButton: () => ({\n    color: \"#ffffff\",\n    backgroundColor: \"#0da4ce\",\n    maxHeight: \"40px\",\n  }),\n\n  formCommon: () => ({\n    alignItems: \"flex-start\",\n  }),\n  buttonContainer: () => ({\n    marginTop: \"5%\",\n    // marginRight: \"22%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  }),\n  dontHaveAccount: () => ({\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n  tools: () => ({\n    display: \"flex\",\n    width: \"100%\",\n  }),\n});\n\nexport { useStyles };\n","import React from \"react\";\nimport ImageContainer from \"../../components/ImageContainer\";\nimport Schema from \"../../schema\";\nimport InputField from \"../../components/inputfield\";\nimport Utils from \"../../Utils\";\n\nimport {\n  HeadingText,\n  CommonButton,\n  InnerMainDiv,\n  SmallText,\n} from \"../../components/styledComponents/auth/signIn\";\n\nimport { Link } from \"react-router-dom\";\nimport { useStyles } from \"./style\";\nimport { useTheme } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik, Form } from \"formik\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { useDispatch } from \"react-redux\";\nimport LocalImages from \"../../Utils/images\";\nimport NormalButton from \"../../components/button/NormalButton\";\nimport { resendMail } from \"./actions\";\n\nconst Verify = () => {\n  const theme = useTheme();\n  const classes = useStyles({ theme });\n  const dispatch = useDispatch();\n  const handleResendEmail = () => {\n    dispatch(resendMail());\n  };\n  return (\n    <>\n      <HelmetProvider>\n        <div className={classes.loginContainer}>\n          <Box >\n            <div className={classes.titleContainer}>\n            <ImageContainer\n              style={classes.brandLogo}\n              imgUrl={LocalImages.Logo}\n            />\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"30px\",\n                  fontWeight: \"bold\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#4f4f4f\",\n                  float: \"left\",\n                  marginTop: \"4%\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"20px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Verify your email\n              </Typography>\n            </div>\n            <div className={classes.verifyTitle}>\n              <Typography\n                sx={{\n                  fontSize: \"15px\",\n                  textAlign: \"left\",\n                  width: \"100%\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#687173\",\n                  float: \"left\",\n                  marginTop: \"2%\",\n                  marginRight: \"10% !important\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"12px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Your Account has been successfully registered. Confirm your\n                email address to start using Infinite Trades\n              </Typography>\n            </div>\n            </div>\n            <div className={classes.buttonContainer}>\n              <CommonButton\n                // className={classes.resendMail}\n                sx={{\n                  color: \"black\",\n                  textDecoration: \"none\",\n                  width: \"40%\",\n                  border: \"1px solid black\",\n                  backgroundColor: \"#fff\",\n                  \"&:hover\": {\n                    background: \"none\",\n                  },\n                }}\n                type=\"submit\"\n                variant=\"contained\"\n                onClick={handleResendEmail}\n              >\n                <Typography className={classes.lables}>Resend Email</Typography>\n              </CommonButton>\n              <CommonButton\n                className={classes.activeButton}\n                sx={{ color: \"#fff\", textDecoration: \"none\", width: \"40%\" }}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                <Typography className={classes.lables}>Login</Typography>\n              </CommonButton>\n            </div>\n          </Box>\n        </div>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default Verify;\n"],"names":["NormalButton","children","rest","attributes","fullWidth","sx","padding","submitForm","useFormikContext","onClick","Button","ActiveButton","styled","backgroundColor","width","ActionButton","height","marginTop","borderRadius","CommonButton","fontSize","fontWeight","fontStretch","lineHeight","letterSpacing","color","margin","signUp","values","setSubmitting","history","dispatch","navigator","onLine","dataToSend","deviceId","checked","Utils","respData","data","statusCode","accessToken","email","name","userId","localStorage","setItem","push","type","payload","error","console","log","resendMail","getItem","deviceToken","getSkills","skills","soleTraderProfileComplete","getState","profileSelectorReducer","userType","mobileNo","location","valToSend","companySoleTraderDetail","useStyles","makeStyles","loginContainer","theme","display","flexDirection","justifyContent","breakpoints","down","titleContainer","alignItems","brandLogo","up","checkBoxContainer","float","checkBox","background","boxSizing","marginBottom","marginLeft","marginRight","ckBox","endIconContainer","title","verifyTitle","border","position","right","lables","forgotPassword","textDecoration","profileSelector","cursor","inputField","WebkitAppearance","webkitAppearance","textfieldClass","selectProfile","normalButton","activeButton","maxHeight","formCommon","buttonContainer","dontHaveAccount","tools","useTheme","classes","useDispatch","className","style","imgUrl","LocalImages","textAlign","variant"],"sourceRoot":""}