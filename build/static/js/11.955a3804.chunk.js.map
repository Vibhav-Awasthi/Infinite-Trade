{"version":3,"file":"static/js/11.955a3804.chunk.js","mappings":"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","sources":["components/inputfield/index.tsx","schema/index.ts","screen/login/action.ts","screen/login/forgotPassword.tsx","screen/login/style.tsx"],"sourcesContent":["import React from \"react\";\nimport { useField } from \"formik\";\nimport { TextField, TextFieldProps } from \"@mui/material\";\n\n\nconst InputField = ({ name, ...rest }: TextFieldProps) => {\n  const [field, meta] = useField(name as string);\n\n  // console.log(name,meta);\n\n  const attributes: TextFieldProps = {\n    ...rest,\n    ...field,\n    fullWidth: true,\n    variant: \"outlined\",\n    value: field.value || \"\",\n    // autoComplete: \"off\"\n  };\n\n  if (meta && meta.touched && meta.error) {\n    attributes.error = true;\n    attributes.helperText = meta.error;\n  }\n\n  return (\n    <div>\n      <TextField\n        size=\"small\"\n        sx={{\n          \n          \"& label.Mui-focused\": {\n            borderColor: \"#424546\",\n          },\n          \"& .MuiInput-underline:after\": {\n            border: \"1px solid #424546\",\n          },\n          \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n              border: \"1px solid #424546\",\n            },\n            \"&:hover fieldset\": {\n              border: \"1px solid #424546\",\n            },\n            \"&.Mui-focused fieldset\": {\n              boxShadow: \"-2px 0px 23px -2px rgba(0,0,0,0.33)\",\n              // -webkit-box-shadow: -2px 0px 23px -2px rgba(0,0,0,0.33);\n              // -moz-box-shadow: -2px 0px 23px -2px rgba(0,0,0,0.33);\n            },\n          },\n          [`& fieldset`]: {\n            borderRadius: 0,\n          },\n        }}\n        {...attributes}\n      />\n    </div>\n  );\n};\n\nexport default InputField;\n","import * as Yup from \"yup\";\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst LoginSchema = () => {\n  return Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter valid email\")\n      .max(50, \"Email can be maximum of hundred characters\")\n      .required(\"Email field cannot be blank\"),\n    password: Yup.string().trim().required(\"Password field cannot be blank\"),\n  });\n};\nconst MobileNumber = () => {\n  return Yup.object().shape({\n    PhoneNumber: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n  });\n};\nconst SignupSchema = () => {\n  return Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .max(100, \"Name can be maximum of hundred characters\")\n\n      .required(\"Name field cannot be blank\"),\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter valid email\")\n      .max(100, \"Email can be maximum of hundred characters\")\n\n      .required(\"Email field cannot be blank\"),\n    password: Yup.string().trim().required(\"Password field cannot be blank\"),\n    checked: Yup.boolean().required(\"Please Mark this box\"),\n  });\n};\nconst ChangePasswordScheema = () => {\n  return Yup.object().shape({\n    currentpassword: Yup.string()\n      .trim()\n      .required(\"Current Password field cannot be blank\"),\n    newpassword: Yup.string()\n      .trim()\n      .min(6, \"Password should be minimum of six characters\")\n      .max(20, \"Password should be maximum of twenty characters\")\n\n      .required(\"New Password field cannot be blank\")\n      .test(\n        \"notBothAtTheSameTime\",\n        \"Current Password and New Password should not be the same\",\n        function (newpassword) {\n          const { currentpassword } = this.parent;\n          if (currentpassword === newpassword) {\n            return false;\n          }\n          return true;\n        }\n      ),\n  });\n};\n\nconst CompanyContactSchema = () => {\n  return Yup.object().shape({\n    mobileNo: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n    officeNo: Yup.string()\n      .required(\"Please enter your Office number\")\n      .matches(phoneRegExp, \"Office number is not valid\")\n      .min(10, \"to short\")\n      .max(10, \"to long\"),\n  });\n};\n\nconst BusinessDetailSchema = () => {\n  return Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .max(100, \"Name can be maximum of hundred characters\")\n\n      .required(\"Name field cannot be blank\"),\n    phone_number: Yup.string()\n      .required(\"Please enter your phone number\")\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .min(10, \"Phone number cannot be less than 10 digits\"),\n    location: Yup.object().required(\"Please enter the location\"),\n\n    checked: Yup.boolean().required(\"Please Mark this box\"),\n  });\n};\n\nconst SoleTraderSchema = () =>\n  Yup.object().shape({\n    businessName: Yup.string().trim().required(\"Required\"),\n    abnNumber: Yup.string()\n      .trim()\n      .max(10, \"Maximum limit is 10 digits\")\n      .required(\"Required\"),\n    location: Yup.object()\n      .shape({\n        address: Yup.string(),\n        coordinates: Yup.array(),\n      })\n      .required(\"Location Required\"),\n    skills: Yup.array().min(1, \"Required\"),\n    industryExp: Yup.number()\n      .max(20, \"Cannot exceed 20 years of Experience\")\n      .required(\"Required\"),\n  });\n\nconst ForgotPassWordSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .email(\"Please enter a valid email\")\n      .required(\"Email required\"),\n  });\n\nconst ResetPasswordSchema = () =>\n  Yup.object().shape({\n    newPassword: Yup.string().trim().required(\"Password filed is required\"),\n    confirmPassword: Yup.string()\n      .trim()\n      .required(\"Password field is required\")\n      .test(\n        \"check confirmPassword\",\n        \"Password does not match\",\n        function (value: any) {\n          const { newPassword } = this.parent;\n          return value === newPassword;\n        }\n      ),\n  });\n\nconst Schema = {\n  LoginSchema,\n  SignupSchema,\n  ChangePasswordScheema,\n  CompanyContactSchema,\n  MobileNumber,\n  BusinessDetailSchema,\n  SoleTraderSchema,\n  ForgotPassWordSchema,\n  ResetPasswordSchema,\n};\n\nexport default Schema;\n","import Utils from \"../../Utils\";\n\nexport const login = (values: { [key: string]: any }, history: any) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      ...values,\n      deviceId: \"3\",\n      deviceToken: \"deviceToken\"\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.login,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n        console.log(data);\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          \n          Utils.showAlert(1,data.message)\n          history.push(Utils.Pathname.Dashboard);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n        \n        } else {\n          Utils.showAlert(2,data.message)\n          dispatch({ \n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        console.log(data,error);\n        Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const forgotPassword = (\n  values: { [key: string]: any },\n  history: any\n) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      ...values,\n      deviceId: \"3\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.forgotPassword,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          console.log(data);\n\n          history.push(Utils.Pathname.Link_SENT);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          Utils.showAlert(1, data.message);\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const resetPassword = (\n  values: { [key: string]: any },\n  token: string,\n  history: any\n) => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      // check if user is online or not\n      Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      token: token.split(\"=\")[1],\n      newPassword: values.newPassword,\n      deviceId: localStorage.getItem(\"user_id\")? localStorage.getItem(\"user_id\") : \"3\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.resetPassword,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          console.log(data);\n\n          history.push(Utils.Pathname.LOGIN);\n\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          Utils.showAlert(1,data.message);\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        console.log(data);\n        Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const verifyAccount = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      // Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      token: localStorage.getItem(\"verify_account_token\") || \"\",\n      deviceId: \"3\",\n      deviceToken: localStorage.getItem(\"user_id\") || \"\",\n    };\n\n    console.log(dataToSend);\n\n    // return;\n\n    Utils.API.postApiCall(\n      Utils.endpoint.verify,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n        console.log(data);\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          localStorage.setItem(\"accessToken\", data.data.accessToken);\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, \"Successfully logged in!\");\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        console.log(data);\n        // Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n\nexport const resendMail = () => {\n  return (dispatch: Function) => {\n    if (!navigator.onLine) {\n      //check if user is online or not\n      Utils.showAlert(2, 'Please check your internet connection!');\n      dispatch({\n        type: Utils.ActionName.LOADING,\n        payload: false,\n      });\n      return;\n    }\n\n    let dataToSend = {\n      email: localStorage.getItem(\"user_email\") || \"\",\n      type: 1,\n      deviceId: \"string\",\n      deviceToken: localStorage.getItem(\"verify_account_token\") || \"\",\n    };\n\n    Utils.API.postApiCall(\n      Utils.endpoint.resendLink,\n      dataToSend,\n      (respData: any) => {\n        let { data } = respData;\n\n        if (data.statusCode === Utils.Constants.api_success_code.success) {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n\n          // Utils.showAlert(1, data.message);\n        } else {\n          dispatch({\n            type: Utils.ActionName.LOADING,\n            payload: false,\n          });\n        }\n      },\n      (error: any) => {\n        let { data } = error;\n        // console.log(data);\n        Utils.showAlert(2, data.message);\n        dispatch({\n          type: Utils.ActionName.LOADING,\n          payload: false,\n        });\n      }\n    );\n  };\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport ImageContainer from \"../../components/ImageContainer\";\nimport Schema from \"../../schema\";\nimport InputField from \"../../components/inputfield\";\nimport Utils from \"../../Utils\";\n\nimport { ActiveButton } from \"../../components/styledComponents/auth/signIn\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useStyles } from \"./style\";\nimport { useTheme } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Formik, Form } from \"formik\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport LocalImages from \"../../Utils/images\";\nimport { forgotPassword } from \"./action\";\nimport { useDispatch } from \"react-redux\";\n\nconst ForgotPassword = () => {\n  const theme = useTheme();\n  const classes = useStyles({ theme });\n  const history = useHistory();\n  const dispatch = useDispatch();\n  return (\n    <>\n      <HelmetProvider>\n        <div className={classes.loginContainer}>\n          <Box className={classes.titleContainer}>\n            <ImageContainer\n              style={classes.brandLogo}\n              imgUrl={LocalImages.Logo}\n            />\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"30px\",\n                  fontWeight: \"bold\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#4f4f4f\",\n                  float: \"left\",\n                  marginTop: \"4%\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"20px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                Forgot Password\n              </Typography>\n            </div>\n            <div className={classes.title}>\n              <Typography\n                sx={{\n                  fontSize: \"15px\",\n                  // fontWeight: \"bold\",\n                  fontStretch: \"normal\",\n                  lineHeight: \"normal\",\n                  letterSpacing: \"normal\",\n                  color: \"#687173\",\n                  float: \"left\",\n                  marginTop: \"4%\",\n                  [theme.breakpoints.down(1025)]: {\n                    fontSize: \"12px\",\n                    marginLeft: \"2%\",\n                    marginTop: \"4%\",\n                  },\n                }}\n              >\n                To reset your password, please enter your email address\n              </Typography>\n            </div>\n          </Box>\n          <Formik\n            initialValues={{\n              email: \"\",\n            }}\n            validationSchema={Schema.ForgotPassWordSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              // dispatch(login(value, history, setSubmitting, rememberMe));\n              console.log(values);\n              dispatch(forgotPassword(values, history));\n            }}\n          >\n            <Form>\n              <div className={classes.lables}>\n                <Typography>EMAIL ADDRESS</Typography>\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  placeholder=\"Enter Email Address\"\n                  name=\"email\"\n                  type={\"email\"}\n                />\n              </div>\n\n              <ActiveButton\n                className={classes.activeButton}\n                sx={{ color: \"#fff\",textTransform:\"capitalize\" }}\n                variant=\"contained\"\n              >\n                Send\n              </ActiveButton>\n            </Form>\n          </Formik>\n        </div>\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n","import { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  loginContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    width: \"88% !important\",\n    height: \"88% !important\",\n    marginLeft: \"8%\",\n    [theme.breakpoints.down(1024)]: {\n      padding: \"50px\",\n      justifyContent: \"center\",\n    },\n    // \"& > div\": {\n    //   [theme.breakpoints.down(1025)]: {\n    //     width: \"90% !important\",\n    //   },\n    // },\n  }),\n\n  titleContainer: ({ theme }: any) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  }),\n\n  brandLogo: ({ theme }: any) => ({\n    width: \"100%\",\n    // position: \"relative\",\n    // right: \"12%\",\n    \"& figure\": {\n      margin: 0,\n      width: \"140px\",\n      height: \"70px\",\n      [theme.breakpoints.up(1920)]: {\n        width: \"200px\",\n        height: \"100px\",\n      },\n      [theme.breakpoints.up(2560)]: {\n        width: \"240px\",\n        height: \"120px\",\n      },\n    },\n  }),\n\n  title: ({ theme }: any) => ({\n    width: \"100%\",\n\n    // margin: \"30px 160px 15px 0\",\n    // [theme.breakpoints.up(1920)]: {\n    //   margin: \"32px 0 20px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"30px\",\n    //   },\n    // },\n    // [theme.breakpoints.up(2560)]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"40px\",\n    //   },\n    // },\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   margin: \"40px 0 25px 0\",\n    //   \"& .MuiTypography-h5\": {\n    //     fontSize: \"1.4rem\",\n    //   },\n    // },\n    // \"& .MuiTypography-h5\": {\n    //   fontWeight: 800,\n    // },\n  }),\n  lables: ({ theme }: any) => ({\n    float: \"left\",\n    marginTop:\"8%\",\n    marginBottom: \"1.5%\",\n  }),\n\n  verifyTitle: ({ theme }: any) => ({\n    border: \"1 px solid black\",\n  }),\n  \n  buttonContainer: () => ({\n    marginTop: \"5%\",\n    // marginRight: \"22%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  }),\n\n  forgotPassword: () => ({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"3%\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n\n  inputField: () => ({\n    marginBottom: \"5%\",\n  }),\n\n  activeButton: () => ({\n    color: \"#ffffff\",\n    backgroundColor: \"#0da4ce\",\n    maxHeight:\"40px\",\n  }),\n\n  formCommon: () => ({\n    alignItems: \"flex-start\",\n  }),\n\n  dontHaveAccount: () => ({\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"#687173\",\n    },\n  }),\n  endIconContainer: () => ({\n    backgroundColor: \"#0da4ce\",\n  }),\n});\n\nexport { useStyles };\n"],"names":["name","rest","useField","field","meta","attributes","fullWidth","variant","value","touched","error","helperText","size","sx","borderColor","border","boxShadow","borderRadius","phoneRegExp","Schema","LoginSchema","Yup","shape","email","trim","max","required","password","SignupSchema","checked","ChangePasswordScheema","currentpassword","newpassword","min","test","this","parent","CompanyContactSchema","mobileNo","matches","officeNo","MobileNumber","PhoneNumber","BusinessDetailSchema","phone_number","location","SoleTraderSchema","businessName","abnNumber","address","coordinates","skills","industryExp","ForgotPassWordSchema","ResetPasswordSchema","newPassword","confirmPassword","login","values","history","dispatch","navigator","onLine","dataToSend","deviceId","deviceToken","console","log","Utils","respData","data","statusCode","message","push","type","payload","forgotPassword","resetPassword","token","split","localStorage","getItem","resendMail","theme","useTheme","classes","useStyles","useHistory","useDispatch","className","loginContainer","titleContainer","style","brandLogo","imgUrl","LocalImages","title","fontSize","fontWeight","fontStretch","lineHeight","letterSpacing","color","float","marginTop","breakpoints","down","marginLeft","initialValues","validationSchema","onSubmit","setSubmitting","lables","inputField","placeholder","activeButton","textTransform","makeStyles","display","flexDirection","justifyContent","width","height","padding","margin","up","marginBottom","verifyTitle","buttonContainer","textDecoration","backgroundColor","maxHeight","formCommon","alignItems","dontHaveAccount","endIconContainer"],"sourceRoot":""}